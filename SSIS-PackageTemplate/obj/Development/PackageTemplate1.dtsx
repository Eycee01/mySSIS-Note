<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/4/2020 10:32:14 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="IT01-CANTHONY"
  DTS:CreatorName="UNIVERSALLEAF\anthony_carreon"
  DTS:DTSID="{51503287-22E0-43C1-8604-ADA2499D0F60}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="PackageTemplate1"
  DTS:PackageType="5"
  DTS:VersionBuild="104"
  DTS:VersionGUID="{45608F61-45A1-4D96-B028-BA7801D5B598}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LogsFileConnection]"
      DTS:CreationName="FILE"
      DTS:DTSID="{5E978031-8F45-442F-809C-AF941727F843}"
      DTS:ObjectName="LogsFileConnection">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Project::Dir_RootPath] + "\\" + @[$Project::Dir_ProjectFolder] + "\\" +  @[$Project::Dir_LogsFolder] + "\\" + @[System::PackageName] + "-Logs_" +   SUBSTRING((DT_WSTR,30)GETDATE(),1,10)+  ".txt"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="1"
          DTS:ConnectionString="D:\SSIS-Directory\PackageTemplate\Logs\PackageTemplate1-Logs_2020-01-06.txt" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="LogsFileConnection"
      DTS:CreationName="Microsoft.LogProviderTextFile"
      DTS:Description="Writes log entries for events to a Text file"
      DTS:DTSID="{FB21A6ED-2255-476C-A30E-1E4A36A5D08B}"
      DTS:ObjectName="SSIS log provider for Text files">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AA5B85AC-A849-4640-BEE8-ABD32AFBDAF9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_ContainerName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EB896639-BA04-4F35-BA33-459F5916B543}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="_EmailCounter">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C5575074-C3AD-4ECD-933A-EC7EA222E67C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_ExceptionMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">4,7,OnError,13,OnInformation,12,OnTaskFailed,9,OnWarning</DTS:Property>
    <DTS:Property
      DTS:EventName="Diagnostic"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="DiagnosticEx"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnExecStatusChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnInformation"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostComponentCall"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostEndOfRowset"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostPrimeOutput"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePreComponentCall"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePreEndOfRowset"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePrePrimeOutput"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelineRowsSent"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPostExecute"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPostValidate"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPreExecute"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPreValidate"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnProgress"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnQueryCancel"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnTaskFailed"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnVariableValueChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnWarning"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{FB21A6ED-2255-476C-A30E-1E4A36A5D08B}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\DIMENSION AND FACT DATA LOAD"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{547781ae-0874-460d-8582-33d75f533d02}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="DIMENSION AND FACT DATA LOAD">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\DIMENSION AND FACT DATA LOAD\CUBE PROCESSING"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{bff70563-b496-4c7c-b888-29c87c122c0f}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="CUBE PROCESSING">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1" />
          <DTS:Executables />
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\DIMENSION AND FACT DATA LOAD\DIMENSION DATA LOAD"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{3c5e6f79-dbb1-4f4a-81b5-ad0884b8ac8b}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="DIMENSION DATA LOAD">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1" />
          <DTS:Executables />
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\DIMENSION AND FACT DATA LOAD\FACT DATA LOAD"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{1c5e78af-17f4-4f05-b4d3-23ae7540818f}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="FACT DATA LOAD">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1" />
          <DTS:Executables />
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\DIMENSION AND FACT DATA LOAD\GENERATE FILE"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{e3dd1598-5359-4ae1-8e97-b6cf2759b4c0}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="GENERATE FILE">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1" />
          <DTS:Executables />
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\DIMENSION AND FACT DATA LOAD.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{7d2f1f1f-9181-4030-b5ac-15f76c868c32}"
          DTS:From="Package\DIMENSION AND FACT DATA LOAD\DIMENSION DATA LOAD"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\DIMENSION AND FACT DATA LOAD\FACT DATA LOAD" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\DIMENSION AND FACT DATA LOAD.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{14e9da12-32bc-4c2a-8030-e4f74accb083}"
          DTS:From="Package\DIMENSION AND FACT DATA LOAD\FACT DATA LOAD"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\DIMENSION AND FACT DATA LOAD\CUBE PROCESSING" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\DIMENSION AND FACT DATA LOAD.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{F5B01D78-D59B-4A33-ACCF-4F056CECD777}"
          DTS:From="Package\DIMENSION AND FACT DATA LOAD\CUBE PROCESSING"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\DIMENSION AND FACT DATA LOAD\GENERATE FILE" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ETL END"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:DelayValidation="True"
      DTS:Description="Sequence Container"
      DTS:DTSID="{99135188-20da-4c68-b1c9-fa975cd3ee57}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="ETL END">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\ETL END\Send log file"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{d48b90cc-05d5-4840-8e3c-08b48d429429}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Send log file"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_e2eb541017af440f8b2ee82c89cb6f67"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="System::PackageName,$Project::EmailServer,$Project::EmailPort,$Project::Cred_Email,$Project::Cred_Password,$Project::EmailSubject,$Project::EmailPriority,$Project::Proj_Name,$Project::Dir_FilesFolder,$Project::Dir_LogsFolder,$Project::Dir_ProjectFolder,$Project::Dir_RootPath,$Project::Logs_EmailReceiver,$Project::Logs_EmailReceiverCC"
              ReadWriteVariables="User::_ContainerName,User::_ExceptionMessage">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_d419d21c9ac044f0a7d76258d8d72ef6")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_d419d21c9ac044f0a7d76258d8d72ef6")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net.Mail;
using System.Text.RegularExpressions;
using System.IO;
#endregion

namespace ST_d419d21c9ac044f0a7d76258d8d72ef6
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            
            if (SendMail())
            {
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            else
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
            }

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion


    
        public bool SendMail()
        {
            try
            {

                Dts.Variables["_ContainerName"].Value = "SENDING LOG FILE";


                string ProjectName = Dts.Variables["$Project::Proj_Name"].Value.ToString();
                string PackageName = Dts.Variables["System::PackageName"].Value.ToString();

                string CredEmail = Dts.Variables["$Project::Cred_Email"].Value.ToString();
                string CredPassword = Dts.Variables["$Project::Cred_Password"].Value.ToString();
                string EmailServer = Dts.Variables["$Project::EmailServer"].Value.ToString();
                string EmailPort = Dts.Variables["$Project::EmailPort"].Value.ToString();
                int EmailPriority = Convert.ToInt32(Dts.Variables["$Project::EmailPriority"].Value);



                string EmailSubject = "LOG FILE";
                //RECEIVER OF LOGS
                string LogsReceiver = Dts.Variables["$Project::Logs_EmailReceiver"].Value.ToString();
                string LogsReceiverCC = Dts.Variables["$Project::Logs_EmailReceiverCC"].Value.ToString();



                string theMessage = Dts.Variables["User::_ExceptionMessage"].Value.ToString();


                //@[$Project::Dir_RootPath] + "\\" +                @[$Project::Dir_ProjectFolder] + "\\" +                             @[$Project::Dir_LogsFolder] + "\\" +                               @[System::PackageName] + "-Logs_" +   SUBSTRING((DT_WSTR,30)GETDATE(),1,10)+  ".txt"
                string LogsFile = Dts.Variables["$Project::Dir_RootPath"].Value.ToString() + "\\" + Dts.Variables["$Project::Dir_ProjectFolder"].Value.ToString() + "\\" + Dts.Variables["$Project::Dir_LogsFolder"].Value.ToString() + "\\" + Dts.Variables["System::PackageName"].Value.ToString() + "-Logs_" + DateTime.Now.ToString("yyyy-MM-dd") + ".txt";



                using (SmtpClient smtpClient = new SmtpClient())
                {
                    using (MailMessage message = new MailMessage())
                    {
                        MailAddress fromAddress = new MailAddress(CredEmail, CredEmail);

                        //You can have multiple emails separated by ;
                        string[] sEmailTo = Regex.Split(LogsReceiver, ";");
                        string[] sEmailCC = Regex.Split(LogsReceiverCC, ";");
                        int sEmailServerSMTP = int.Parse(EmailPort);

                        smtpClient.Host = EmailServer;
                        smtpClient.Port = sEmailServerSMTP;
                        smtpClient.EnableSsl = true;

                        System.Net.NetworkCredential myCredentials =
                        new System.Net.NetworkCredential(CredEmail, CredPassword);
                        smtpClient.Credentials = myCredentials;

                        message.From = fromAddress;

                        if (sEmailTo != null)
                        {
                            for (int i = 0; i < sEmailTo.Length; ++i)
                            {
                                if (sEmailTo[i] != null && sEmailTo[i] != "")
                                {
                                    message.To.Add(sEmailTo[i]);
                                }
                                message.To.Add(sEmailTo[i]);
                            }
                        }

                        if (sEmailCC != null)
                        {
                            for (int i = 0; i < sEmailCC.Length; ++i)
                            {
                                if (sEmailCC[i] != null && sEmailCC[i] != "")
                                {
                                    message.To.Add(sEmailCC[i]);
                                }
                            }
                        }



                        switch (EmailPriority)
                        {
                            case 1:
                                message.Priority = MailPriority.High;
                                break;
                            case 3:
                                message.Priority = MailPriority.Low;
                                break;
                            default:
                                message.Priority = MailPriority.Normal;
                                break;
                        }

                        //Attachment myAttachment = new Attachment(D:/ FF / test.txt);
                        //message.Attachments.Add(myAttachment);






                        //message.Priority = MailPriority.High;
                        message.Subject = EmailSubject;
                        message.IsBodyHtml = true;


                        if (!File.Exists(LogsFile))
                        {
                            message.Body = "Hi Team !," +
                                         "<br><br><b>Project Name : </b>" + ProjectName +
                                         "<br><b>Package Name : </b>" + PackageName +
                                         "<br><br><b>Issue : </b>" + "It looks like there is no log file found. ! <br> "+ theMessage  +
                                         "<br><b>Recommendation : </b>Please look into the issue and fix it !" +
                                         "<br><br>Thanks !" +
                                         "<br> SSIS and BI Team";
                            message.From = new MailAddress(CredEmail, "SSIS NOTIFICATION");
                        }
                        else
                        {
                            File.Copy(LogsFile, LogsFile.Replace(".txt", "-COPY.txt"), true);

                            Attachment myAttachment = new Attachment(LogsFile.Replace(".txt", "-COPY.txt"));
                            message.Attachments.Add(myAttachment);

                            message.Body = "Hi Team !," +
                                         "<br><br><b>Project Name : </b>" + ProjectName +
                                         "<br><b>Package Name : </b>" + PackageName +
                                         "<br><br><b>Issue : </b>" + "There is no issue but kindly check the log file." +
                                         "<br><b>Recommendation : </b>Please look for the attachment !" +
                                         "<br><br>Thanks !" +
                                         "<br> SSIS and BI Team";

                            message.From = new MailAddress(CredEmail, "SSIS NOTIFICATION");
                        }

                        smtpClient.Send(message);


                    }
                }
                File.Delete(LogsFile.Replace(".txt", "-COPY.txt"));
                return true;
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(1, "", ex.ToString(), "", 0);
                return false;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_e2eb541017af440f8b2ee82c89cb6f67.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{ea932583-9156-4927-847d-8babf298a818}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_d419d21c9ac044f0a7d76258d8d72ef6</RootNamespace><AssemblyName>ST_e2eb541017af440f8b2ee82c89cb6f67</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST130</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_d419d21c9ac044f0a7d76258d8d72ef6</msb:CodeName>
		<msb:DisplayName>ST_d419d21c9ac044f0a7d76258d8d72ef6</msb:DisplayName>
		<msb:ProjectId>{4D278434-32AD-4596-88BA-FF32C770311E}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_e2eb541017af440f8b2ee82c89cb6f67.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d419d21c9ac044f0a7d76258d8d72ef6.Properties.Settings.get_Default():ST_d419d21c9ac044f0a7d76258d8d72ef6.Properties.Sett" +
    "ings")]

namespace ST_d419d21c9ac044f0a7d76258d8d72ef6.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d419d21c9ac044f0a7d76258d8d72ef6.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d419d21c9ac044f0a7d76258d8d72ef6.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d419d21c9ac044f0a7d76258d8d72ef6.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_d419d21c9ac044f0a7d76258d8d72ef6.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_d419d21c9ac044f0a7d76258d8d72ef6.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_e2eb541017af440f8b2ee82c89cb6f67.dll">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
OgEBANslAAAAAJMITgE/AQEA4yUAAAAAlggXB0UBAgDqJQAAAACGGIgFBgACAPIlAAAAAJEYjgVK
AQIAAAABAHUDCQCIBQEAEQCIBQYAGQCIBQoAKQCIBRAAMQCIBRAAOQCIBRAAQQCIBRAASQCIBRAA
UQCIBRAAWQCIBRAAYQCIBRAAaQCIBQYAuQCIBQYA4QCIBRUA8QCIBQYAcQC0BhsA+QAjBwEA+QBa
BkUAAQGdBEsACQFrA1IACQFhA1cAwQCVA1sAEQEOAF8AeQB1B2QAeQCVA2kAGQHsBm4AgQCIBQYA
iQCIBQYAkQCIBXQAIQERB3oAKQGmAYEAgQBZBxAAgQBQBwEAgQCPBIYAmQCIBXQAgQBxBosAiQCt
BJIAGQGeB5gAiQBDBZ4AOQGhABAAiQCsB6QAiQD6BhAAiQCABIYASQHlBqsAiQCDBxAAGQGqALAA
SQGZB7YAoQCIBRAAiQDKBr0ADAChAMsAgQClANEAYQGeAQYASQHBAdcA+QDaBtwAaQF+BeIAcQCI
BQYAwQCIBQYAcQH1AOsAcQGMB/QAyQCIBfoA6QCIBQYACAAUABQBCAAYABkBKQBzAIUBLgALAF0B
LgATAGYBLgAbAIUBLgAjAI4BLgArALcBLgAzALcBLgA7ALcBLgBDAI4BLgBLAL0BLgBTALcBLgBb
ANQBQwBjABkBSQBzAIUBYQB7ABkBYwBrABkBIAADAAEABAADAAAAWgVOAQAAYgFTAQAAGwdYAQIA
BQADAAIABgAFAAEABwAFAAIACAAHAMMABIAAAAEAAACMHMZcAAAAAAAAOgAAAAQAAAAAAAAAAAAA
AAIBmAAAAAAADQAAAAAAAAAAAAAACwGeAwAAAAAEAAAAAAAAAAAAAAACAaYEAAAAAA0AAAAAAAAA
AAAAAAsBcQAAAAAAAAAAAAEAAADZBQAABQACAAAAAAAAQ29sbGVjdGlvbmAxAFRvSW50MzIAU1Rf
ZDQxOWQyMWM5YWMwNDRmMGE3ZDc2MjU4ZDhkNzJlZjYAU1RfZTJlYjU0MTAxN2FmNDQwZjhiMmVl
ODJjODljYjZmNjcAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdl
ZERUUwB2YWx1ZV9fAG1zY29ybGliAEFkZABTZW5kAFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAE1h
aWxNZXNzYWdlAFZhcmlhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVG
cm9tSGFuZGxlAEZpbGUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBU
eXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFS
VFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBEaXNwb3NlAFBh
cnNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAERlbGV0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0
ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9y
QnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1h
cmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlv
bkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhh
dGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0
QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBh
bnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHNldF9W
YWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRU
YXNrAE5ldHdvcmtDcmVkZW50aWFsAFN5c3RlbS5Db2xsZWN0aW9ucy5PYmplY3RNb2RlbABTY3Jp
cHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU3lzdGVtLk5ldC5NYWlsAFNlbmRN
YWlsAFNUX2UyZWI1NDEwMTdhZjQ0MGY4YjJlZTgyYzg5Y2I2ZjY3LmRsbABzZXRfSXNCb2R5SHRt
bABzZXRfRW5hYmxlU3NsAGdldF9JdGVtAFN5c3RlbQBzZXRfRnJvbQBFbnVtAHJlc291cmNlTWFu
AFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lz
dGVtLlJlZmxlY3Rpb24ATWFpbEFkZHJlc3NDb2xsZWN0aW9uAEF0dGFjaG1lbnRDb2xsZWN0aW9u
AEV4Y2VwdGlvbgBnZXRfVG8AQ3VsdHVyZUluZm8AZ2V0X1Jlc291cmNlTWFuYWdlcgBFdmVudHNP
YmplY3RXcmFwcGVyAEZpcmVFcnJvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5
c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF9kNDE5ZDIx
YzlhYzA0NGYwYTdkNzYyNThkOGQ3MmVmNi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMA
RGVidWdnaW5nTW9kZXMAU1RfZDQxOWQyMWM5YWMwNDRmMGE3ZDc2MjU4ZDhkNzJlZjYuUHJvcGVy
dGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAHNldF9DcmVkZW50aWFscwBTeXN0ZW0uVGV4dC5S
ZWd1bGFyRXhwcmVzc2lvbnMAU3VjY2VzcwBNYWlsQWRkcmVzcwBnZXRfRHRzAFNjcmlwdFJlc3Vs
dHMAZ2V0X0F0dGFjaG1lbnRzAGdldF9FdmVudHMARXhpc3RzAENvbmNhdABPYmplY3QAc2V0X1N1
YmplY3QAU3lzdGVtLk5ldABTcGxpdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABTbXRwQ2xp
ZW50AEF0dGFjaG1lbnQAQ29udmVydABzZXRfUG9ydABzZXRfSG9zdABJQ3JlZGVudGlhbHNCeUhv
c3QAZ2V0X05vdwBSZWdleABzZXRfQm9keQBnZXRfQXNzZW1ibHkAQ29weQBvcF9JbmVxdWFsaXR5
AHNldF9Qcmlvcml0eQBNYWlsUHJpb3JpdHkAAAAAHV8AQwBvAG4AdABhAGkAbgBlAHIATgBhAG0A
ZQAAIVMARQBOAEQASQBOAEcAIABMAE8ARwAgAEYASQBMAEUAACckAFAAcgBvAGoAZQBjAHQAOgA6
AFAAcgBvAGoAXwBOAGEAbQBlAAAnUwB5AHMAdABlAG0AOgA6AFAAYQBjAGsAYQBnAGUATgBhAG0A
ZQAAKSQAUAByAG8AagBlAGMAdAA6ADoAQwByAGUAZABfAEUAbQBhAGkAbAAALyQAUAByAG8AagBl
AGMAdAA6ADoAQwByAGUAZABfAFAAYQBzAHMAdwBvAHIAZAAAKyQAUAByAG8AagBlAGMAdAA6ADoA
RQBtAGEAaQBsAFMAZQByAHYAZQByAAAnJABQAHIAbwBqAGUAYwB0ADoAOgBFAG0AYQBpAGwAUABv
AHIAdAAALyQAUAByAG8AagBlAGMAdAA6ADoARQBtAGEAaQBsAFAAcgBpAG8AcgBpAHQAeQAAEUwA
TwBHACAARgBJAEwARQAAOSQAUAByAG8AagBlAGMAdAA6ADoATABvAGcAcwBfAEUAbQBhAGkAbABS
AGUAYwBlAGkAdgBlAHIAAD0kAFAAcgBvAGoAZQBjAHQAOgA6AEwAbwBnAHMAXwBFAG0AYQBpAGwA
UgBlAGMAZQBpAHYAZQByAEMAQwAAL1UAcwBlAHIAOgA6AF8ARQB4AGMAZQBwAHQAaQBvAG4ATQBl
AHMAcwBhAGcAZQAALSQAUAByAG8AagBlAGMAdAA6ADoARABpAHIAXwBSAG8AbwB0AFAAYQB0AGgA
AANcAAA3JABQAHIAbwBqAGUAYwB0ADoAOgBEAGkAcgBfAFAAcgBvAGoAZQBjAHQARgBvAGwAZABl
AHIAADEkAFAAcgBvAGoAZQBjAHQAOgA6AEQAaQByAF8ATABvAGcAcwBGAG8AbABkAGUAcgAADS0A
TABvAGcAcwBfAAEVeQB5AHkAeQAtAE0ATQAtAGQAZAABCS4AdAB4AHQAAAM7AAABAFFIAGkAIABU
AGUAYQBtACAAIQAsADwAYgByAD4APABiAHIAPgA8AGIAPgBQAHIAbwBqAGUAYwB0ACAATgBhAG0A
ZQAgADoAIAA8AC8AYgA+AAA1PABiAHIAPgA8AGIAPgBQAGEAYwBrAGEAZwBlACAATgBhAG0AZQAg
ADoAIAA8AC8AYgA+AACAkTwAYgByAD4APABiAHIAPgA8AGIAPgBJAHMAcwB1AGUAIAA6ACAAPAAv
AGIAPgBJAHQAIABsAG8AbwBrAHMAIABsAGkAawBlACAAdABoAGUAcgBlACAAaQBzACAAbgBvACAA
bABvAGcAIABmAGkAbABlACAAZgBvAHUAbgBkAC4AIAAhACAAPABiAHIAPgAgAACA0TwAYgByAD4A
PABiAD4AUgBlAGMAbwBtAG0AZQBuAGQAYQB0AGkAbwBuACAAOgAgADwALwBiAD4AUABsAGUAYQBz
AGUAIABsAG8AbwBrACAAaQBuAHQAbwAgAHQAaABlACAAaQBzAHMAdQBlACAAYQBuAGQAIABmAGkA
eAAgAGkAdAAgACEAPABiAHIAPgA8AGIAcgA+AFQAaABhAG4AawBzACAAIQA8AGIAcgA+ACAAUwBT
AEkAUwAgAGEAbgBkACAAQgBJACAAVABlAGEAbQAAI1MAUwBJAFMAIABOAE8AVABJAEYASQBDAEEA
VABJAE8ATgAAEy0AQwBPAFAAWQAuAHQAeAB0AAGBUTwAYgByAD4APABiAHIAPgA8AGIAPgBJAHMA
cwB1AGUAIAA6ACAAPAAvAGIAPgBUAGgAZQByAGUAIABpAHMAIABuAG8AIABpAHMAcwB1AGUAIABi
AHUAdAAgAGsAaQBuAGQAbAB5ACAAYwBoAGUAYwBrACAAdABoAGUAIABsAG8AZwAgAGYAaQBsAGUA
LgA8AGIAcgA+ADwAYgA+AFIAZQBjAG8AbQBtAGUAbgBkAGEAdABpAG8AbgAgADoAIAA8AC8AYgA+
AFAAbABlAGEAcwBlACAAbABvAG8AawAgAGYAbwByACAAdABoAGUAIABhAHQAdABhAGMAaABtAGUA
bgB0ACAAIQA8AGIAcgA+ADwAYgByAD4AVABoAGEAbgBrAHMAIAAhADwAYgByAD4AIABTAFMASQBT
ACAAYQBuAGQAIABCAEkAIABUAGUAYQBtAABxUwBUAF8AZAA0ADEAOQBkADIAMQBjADkAYQBjADAA
NAA0AGYAMABhADcAZAA3ADYAMgA1ADgAZAA4AGQANwAyAGUAZgA2AC4AUAByAG8AcABlAHIAdABp
AGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAdJVZJww2FRK/8U+8DboPkAAQgAQEIAyAAAQUgAQER
EQQgAQEOBSABARFtBCAAEn0kBxkODg4ODg4IDg4ODg4RPRJBEkUSSR0OHQ4IEk0ICBJRAhJVBSAA
EoCBBiABEoCFHAQgAQEcAyAAHAMgAA4EAAEIHAQAABE9BCABDg4FAAEOHQ4FIAIBDg4GAAIdDg4O
BAABCA4EIAEBAgYgAQESgJkFIAEBEkkFAAICDg4FIAASgJ0GIAEBEYChBAABAg4FIAIODg4GAAMB
Dg4CBSAAEoCpBxUSgK0BElEFIAEBEwAFIAEBEkUEAAEBDgUgABKAtQggBQIIDg4OCAgAARKAuRGA
vQUgABKAwQcgAgEOEoDBCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEmUDBhJpAwYSEAIG
CAMGERQDIAACBAAAEmUEAAASaQUAAQESaQQAABIQAwAAAQQIABJlBAgAEmkECAASEAgBAAgAAAAA
AB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfZDQxOWQyMWM5
YWMwNDRmMGE3ZDc2MjU4ZDhkNzJlZjYAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOQAASQEA
Gi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVU
IEZyYW1ld29yayA0LjUAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJj
ZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
aWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291
cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAA4PQAAAAAAAAAAAABSPQAAACAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAARD0AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAMZcjBwAAAEAxlyMHD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AZAA0ADEAOQBkADIAMQBjADkAYQBjADAANAA0AGYAMABhADcAZAA3ADYAMgA1ADgAZAA4AGQA
NwAyAGUAZgA2AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcAMwAw
ADgALgAyADMANwA1ADAAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
ZQAyAGUAYgA1ADQAMQAwADEANwBhAGYANAA0ADAAZgA4AGIAMgBlAGUAOAAyAGMAOAA5AGMAYgA2
AGYANgA3AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADkAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABl
AG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUA
AABTAFQAXwBlADIAZQBiADUANAAxADAAMQA3AGEAZgA0ADQAMABmADgAYgAyAGUAZQA4ADIAYwA4
ADkAYwBiADYAZgA2ADcALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAA
UwBUAF8AZAA0ADEAOQBkADIAMQBjADkAYQBjADAANAA0AGYAMABhADcAZAA3ADYAMgA1ADgAZAA4
AGQANwAyAGUAZgA2AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA3ADMAMAA4AC4AMgAzADcANQAwAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgA3ADMAMAA4AC4AMgAzADcANQAwAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAGQ9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ETL START"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{c09ca4c8-3281-4921-8a06-bfaaea59cae0}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:FailParentOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="ETL START">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">4,7,OnError,13,OnInformation,12,OnTaskFailed,9,OnWarning</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnInformation"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnTaskFailed"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnWarning"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
      </DTS:LoggingOptions>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\ETL START\Check Connections"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{46abb5b2-f360-426e-a000-7af8c398ad71}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Check Connections">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1" />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\ETL START\Check Connections\Verify Connection"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{c3654fe6-e83a-4215-983b-123e1bbafd30}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Verify Connection"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0"
                DTS:LoggingMode="1">
                <DTS:Property
                  DTS:DataType="8"
                  DTS:Name="EventFilter">1,12,OnTaskFailed</DTS:Property>
                <DTS:Property
                  DTS:EventName="OnTaskFailed"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
              </DTS:LoggingOptions>
              <DTS:EventHandlers>
                <DTS:EventHandler
                  DTS:refId="Package\ETL START\Check Connections\Verify Connection.EventHandlers[OnError]"
                  DTS:CreationName="OnError"
                  DTS:DTSID="{6719e904-e01e-4c61-8472-f516237d0515}"
                  DTS:EventID="0"
                  DTS:EventName="OnError"
                  DTS:LocaleID="-1">
                  <DTS:Variables>
                    <DTS:Variable
                      DTS:CreationName=""
                      DTS:Description="The propagate property of the event"
                      DTS:DTSID="{cc0c5142-585e-4f16-a3bf-b17a25b35874}"
                      DTS:IncludeInDebugDump="6789"
                      DTS:Namespace="System"
                      DTS:ObjectName="Propagate">
                      <DTS:VariableValue
                        DTS:DataType="11">-1</DTS:VariableValue>
                    </DTS:Variable>
                  </DTS:Variables>
                  <DTS:Executables />
                </DTS:EventHandler>
              </DTS:EventHandlers>
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_98db1a12be9a411f83ccc3457c81b8e0"
                  VSTAMajorVersion="14"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadWriteVariables="User::_ContainerName,User::_ExceptionMessage">
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_8845d3c9b2384b67b8f1f0ccf145cac8")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_8845d3c9b2384b67b8f1f0ccf145cac8")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_98db1a12be9a411f83ccc3457c81b8e0.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{DBD10557-5FAF-4894-9EC5-1D6D2AE41D78}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_8845d3c9b2384b67b8f1f0ccf145cac8</RootNamespace><AssemblyName>ST_98db1a12be9a411f83ccc3457c81b8e0</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="CheckConnections.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST130</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_8845d3c9b2384b67b8f1f0ccf145cac8</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_8845d3c9b2384b67b8f1f0ccf145cac8</msb:DisplayName>
		<msb:ProjectId>{40BEC492-AC9A-4DB1-9C64-11E9A094F649}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_98db1a12be9a411f83ccc3457c81b8e0.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="CheckConnections.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8845d3c9b2384b67b8f1f0ccf145cac8.Properties.Settings.get_Default():ST_8845d3c9b2384b67b8f1f0ccf145cac8.Properties.Sett" +
    "ings")]

namespace ST_8845d3c9b2384b67b8f1f0ccf145cac8.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="CheckConnections.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_8845d3c9b2384b67b8f1f0ccf145cac8
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class CheckConnections : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            bool Failure = false;
            bool FireAgain = true;

            Dts.Events.FireInformation(1, "", "-----CHECKING CONNECTION STARTED-----", "", 0, ref FireAgain);
            foreach (var ConnectionManager in Dts.Connections)
            {
                Dts.Events.FireInformation(1, "", String.Format("ConnectionManager='{0}', ConnectionString='{1}'",
                  ConnectionManager.Name, ConnectionManager.ConnectionString), "", 0, ref FireAgain);
                try
                {
                    ConnectionManager.AcquireConnection(null);
                    Dts.Events.FireInformation(1, "", String.Format("CONNECTION ACQUIRED SUCCESSFULY ON '{0}'",ConnectionManager.Name), "", 0, ref FireAgain);
                }
                catch (Exception ex)
                {
                    Dts.Variables["User::_ExceptionMessage"].Value = String.Format("Failed to acquire connection to " + ConnectionManager.Name +".<br>Connection String : "+ ConnectionManager.ConnectionString, ex.Message);
                    Dts.Events.FireError(-1, "", String.Format("FAILED TO ACQUIRE CONNECTION TO '{0}'. Error Message='{1}'",ConnectionManager.Name, ex.Message),"", 0);
                    Failure = true;
                }
            }

            Dts.Variables["User::_ContainerName"].Value = "CHECKING CONNECTION";

            Dts.Events.FireInformation(1, "", "-----CHECKING CONNECTION ENDED-----", "", 0, ref FireAgain);

            if (Failure)
                Dts.TaskResult = (int)ScriptResults.Failure;
            else
                Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8845d3c9b2384b67b8f1f0ccf145cac8.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8845d3c9b2384b67b8f1f0ccf145cac8.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8845d3c9b2384b67b8f1f0ccf145cac8.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_8845d3c9b2384b67b8f1f0ccf145cac8.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_8845d3c9b2384b67b8f1f0ccf145cac8.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_98db1a12be9a411f83ccc3457c81b8e0.dll">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
EAA5APEEEABBAPEEEABJAPEEEABRAPEEEABZAPEEEABhAPEEEABpAPEEBgCZAPEEBgDBAPEEFQDR
APEEBgBxAAMGJgDZABkGKwDhAAgEMADZANoFOwDpAOMEQAB5AFQGRQCBAMsASgCBADUDSgDxACsG
TgCBAFQEVQDxACsGWgDZAMMFYAD5AOIDZQDxACQGbACJAJIASgABAQsDdADhALYEeQAJAWAGggDZ
AEUGAQBxAPEEBgChAPEEBgARAbkAhgARAWkGjwCpAPEElQDJAPEEBgAIABQArwAIABgAtAApAHMA
HAEuAAsA9AAuABMA/QAuABsAHAEuACMAJQEuACsATgEuADMATgEuADsATgEuAEMAJQEuAEsAVAEu
AFMATgEuAFsAawFDAGMAtABJAHMAHAFhAHsAtABjAGsAtAAbAAMAAQAEAAMAAACABOUAAAAhAeoA
AAA9Bu8AAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAACMHM11AAAAAAAAAQAAAAQAAAAA
AAAAAAAAAJ0AeQAAAAAADQAAAAAAAAAAAAAApgBKAwAAAAANAAAAAAAAAAAAAACmAFIAAAAAAAQA
AAAAAAAAAAAAAJ0A6wMAAAAAAAAAAAEAAABCBQAABQACAAAAAFNUXzk4ZGIxYTEyYmU5YTQxMWY4
M2NjYzM0NTdjODFiOGUwAFNUXzg4NDVkM2M5YjIzODRiNjdiOGYxZjBjY2YxNDVjYWM4ADxNb2R1
bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAGRlZmF1
bHRJbnN0YW5jZQBnZXRfTWVzc2FnZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBl
RnJvbUhhbmRsZQBnZXRfTmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUA
RmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2Ny
aXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJs
ZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRy
aWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1i
bHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdv
cmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3Jp
cHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVBy
b2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tF
bnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0
aWJpbGl0eUF0dHJpYnV0ZQBzZXRfVmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmlu
ZwBnZXRfQ29ubmVjdGlvblN0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABT
eXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfOThkYjFhMTJiZTlhNDExZjgzY2NjMzQ1N2M4MWI4ZTAu
ZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAE1haW4ARmlyZUluZm9ybWF0aW9u
AFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0
aW9uAEFjcXVpcmVDb25uZWN0aW9uAEV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VN
YW5hZ2VyAENvbm5lY3Rpb25NYW5hZ2VyAEV2ZW50c09iamVjdFdyYXBwZXIARmlyZUVycm9yAENv
bm5lY3Rpb25FbnVtZXJhdG9yAER0c0VudW1lcmF0b3IAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0
b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lz
dGVtLlJlc291cmNlcwBTVF84ODQ1ZDNjOWIyMzg0YjY3YjhmMWYwY2NmMTQ1Y2FjOC5Qcm9wZXJ0
aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfODg0NWQzYzliMjM4NGI2
N2I4ZjFmMGNjZjE0NWNhYzguUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAGdldF9D
b25uZWN0aW9ucwBDaGVja0Nvbm5lY3Rpb25zAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRz
AGdldF9FdmVudHMAQ29uY2F0AEZvcm1hdABPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1
bHQAZ2V0X0N1cnJlbnQATW92ZU5leHQAZ2V0X0Fzc2VtYmx5AAAAAAEASy0ALQAtAC0ALQBDAEgA
RQBDAEsASQBOAEcAIABDAE8ATgBOAEUAQwBUAEkATwBOACAAUwBUAEEAUgBUAEUARAAtAC0ALQAt
AC0AAV9DAG8AbgBuAGUAYwB0AGkAbwBuAE0AYQBuAGEAZwBlAHIAPQAnAHsAMAB9ACcALAAgAEMA
bwBuAG4AZQBjAHQAaQBvAG4AUwB0AHIAaQBuAGcAPQAnAHsAMQB9ACcAAVFDAE8ATgBOAEUAQwBU
AEkATwBOACAAQQBDAFEAVQBJAFIARQBEACAAUwBVAEMAQwBFAFMAUwBGAFUATABZACAATwBOACAA
JwB7ADAAfQAnAAEvVQBzAGUAcgA6ADoAXwBFAHgAYwBlAHAAdABpAG8AbgBNAGUAcwBzAGEAZwBl
AABBRgBhAGkAbABlAGQAIAB0AG8AIABhAGMAcQB1AGkAcgBlACAAYwBvAG4AbgBlAGMAdABpAG8A
bgAgAHQAbwAgAAAzLgA8AGIAcgA+AEMAbwBuAG4AZQBjAHQAaQBvAG4AIABTAHQAcgBpAG4AZwAg
ADoAIAAAdUYAQQBJAEwARQBEACAAVABPACAAQQBDAFEAVQBJAFIARQAgAEMATwBOAE4ARQBDAFQA
SQBPAE4AIABUAE8AIAAnAHsAMAB9ACcALgAgAEUAcgByAG8AcgAgAE0AZQBzAHMAYQBnAGUAPQAn
AHsAMQB9ACcAASlVAHMAZQByADoAOgBfAEMAbwBuAHQAYQBpAG4AZQByAE4AYQBtAGUAACdDAEgA
RQBDAEsASQBOAEcAIABDAE8ATgBOAEUAQwBUAEkATwBOAABHLQAtAC0ALQAtAEMASABFAEMASwBJ
AE4ARwAgAEMATwBOAE4ARQBDAFQASQBPAE4AIABFAE4ARABFAEQALQAtAC0ALQAtAAFxUwBUAF8A
OAA4ADQANQBkADMAYwA5AGIAMgAzADgANABiADYANwBiADgAZgAxAGYAMABjAGMAZgAxADQANQBj
AGEAYwA4AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAACDzPHT
2XOmRLerU7BT7VbxAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFdCgcFAgISPRJBEkUEIAASbQQg
ABJxCiAGAQgODg4IEAIEIAASdQQgABI9BCAAEkEDIAAOBgADDg4cHAQgARwcBQACDg4cBCAAEn0G
IAESgIEcBwAEDg4ODg4EIAEBHAggBQIIDg4OCAMgAAIIAAESgIkRgI0FIAASgJEHIAIBDhKAkQi3
elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJVAwYSWQMGEhACBggDBhEUBAAAElUEAAASWQUA
AQESWQQAABIQAwAAAQQIABJVBAgAElkECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2Vw
dGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfODg0NWQzYzliMjM4NGI2N2I4ZjFmMGNjZjE0NWNh
YzgAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lv
bj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUAAAC0AAAA
zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBW
ZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYx
OTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBB
RFBBRFC0AAAAWDMAAAAAAAAAAAAAcjMAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGQzAAAAAAAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAzXWMHAAAAQDNdYwcPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwA4ADgANAA1AGQAMwBjADkAYgAyADMAOAA0AGIANgA3AGIAOABmADEAZgAwAGMAYwBm
ADEANAA1AGMAYQBjADgAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
NwAzADAAOAAuADMAMAAxADUANwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwA5ADgAZABiADEAYQAxADIAYgBlADkAYQA0ADEAMQBmADgAMwBjAGMAYwAzADQANQA3AGMA
OAAxAGIAOABlADAALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAOQAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfADkAOABkAGIAMQBhADEAMgBiAGUAOQBhADQAMQAxAGYAOAAzAGMAYwBjADMA
NAA1ADcAYwA4ADEAYgA4AGUAMAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwA4ADgANAA1AGQAMwBjADkAYgAyADMAOAA0AGIANgA3AGIAOABmADEAZgAwAGMA
YwBmADEANAA1AGMAYQBjADgAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADcAMwAwADgALgAzADAAMQA1ADcAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADcAMwAwADgALgAzADAAMQA1ADcAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAhDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\ETL START\Check Connections.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{20364320-7650-4eb6-866b-a39fc333bcb9}"
              DTS:EventID="0"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{fbb03174-d9af-445a-ad71-44965b98ad8e}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\ETL START\Check File Directory"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{eb2715cd-87c2-42dd-9af4-79fe0e921fda}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Check File Directory">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1" />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\ETL START\Check File Directory\Checking Directory"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{dacb55e6-7c59-41f1-b193-49391948b171}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Checking Directory"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0"
                DTS:LoggingMode="1">
                <DTS:Property
                  DTS:DataType="8"
                  DTS:Name="EventFilter">13,7,OnError,19,OnExecStatusChanged,13,OnInformation,13,OnPostExecute,14,OnPostValidate,12,OnPreExecute,13,OnPreValidate,10,OnProgress,13,OnQueryCancel,12,OnTaskFailed,22,OnVariableValueChanged,9,OnWarning,18,ScriptTaskLogEntry</DTS:Property>
                <DTS:Property
                  DTS:EventName="OnError"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnExecStatusChanged"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnInformation"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPostExecute"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPostValidate"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPreExecute"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnPreValidate"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnProgress"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnQueryCancel"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnTaskFailed"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnVariableValueChanged"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnWarning"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="ScriptTaskLogEntry"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
              </DTS:LoggingOptions>
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_a80e4f8af90648548dfae0dfaab75448"
                  VSTAMajorVersion="14"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="$Project::Dir_FilesFolder,$Project::Dir_LogsFolder,$Project::Dir_ProjectFolder,$Project::Dir_RootPath"
                  ReadWriteVariables="User::_ContainerName,User::_ExceptionMessage">
                  <ProjectItem
                    Name="CheckFileFolder.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_1b78d5f4bc06429a839fe0485cf34f7f
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            bool Failure = false;
            bool FireAgain = true;

            string DestinationPath = Dts.Variables["$Project::Dir_RootPath"].Value.ToString() + @"\"+ Dts.Variables["$Project::Dir_ProjectFolder"].Value.ToString();
            string RoothPath = Dts.Variables["$Project::Dir_RootPath"].Value.ToString();
            string ProjectFolder = Dts.Variables["$Project::Dir_ProjectFolder"].Value.ToString();
            string Logs = Dts.Variables["$Project::Dir_LogsFolder"].Value.ToString();
            string Files = Dts.Variables["$Project::Dir_FilesFolder"].Value.ToString();


            Dts.Variables["User::_ContainerName"].Value = "DIRECTORY CHECKING";
            
            try
            {
                Dts.Events.FireInformation(1, "", "-----CHECKING SSIS DIRECTORY STARTED-----", "", 0, ref FireAgain);

                if (!Directory.Exists(DestinationPath))
                {
                    Dts.Events.FireInformation(1, "", DestinationPath + " is Missing !! ", "", 0, ref FireAgain);

                    // Create Destination Path
                    Dts.Events.FireInformation(1, "", "Creating " + DestinationPath + "... ", "", 0, ref FireAgain);
                    Directory.CreateDirectory(DestinationPath);
                    Dts.Events.FireInformation(1, "", DestinationPath + " Successfuly Created !! ", "", 0, ref FireAgain);
                    // Create Log Path
                    Dts.Events.FireInformation(1, "", "Creating folder for Logs...", "", 0, ref FireAgain);
                    Directory.CreateDirectory(DestinationPath + @"\" + Logs);
                    Dts.Events.FireInformation(1, "", Logs + " Successfuly Created !! ", "", 0, ref FireAgain);

                    // Create File Path
                    Dts.Events.FireInformation(1, "", "Creating folder for Files...", "", 0, ref FireAgain);
                    Directory.CreateDirectory(DestinationPath + @"\" + Files);
                    Dts.Events.FireInformation(1, "", Files + " Successfuly Created !! ", "", 0, ref FireAgain);

                    Failure = false; // 
                }
                else
                {
                    Dts.Events.FireInformation(1, "", ProjectFolder + " Folder Exists.!", "", 0, ref FireAgain);

                    if (!Directory.Exists(DestinationPath + @"\" + Logs))
                    {
                        Dts.Events.FireInformation(1, "", "Folder of Logs is Missing !! ", "", 0, ref FireAgain);
                        Dts.Events.FireInformation(1, "", "Creating folder for Logs...", "", 0, ref FireAgain);
                        Directory.CreateDirectory(DestinationPath + @"\" + Logs);
                        Dts.Events.FireInformation(1, "", Logs + " Successfuly Created !! ", "", 0, ref FireAgain);
                    }
                    else
                    {
                        Dts.Events.FireInformation(1, "", "Log Folder Exists.!", "", 0, ref FireAgain);
                    }

                    if (!Directory.Exists(DestinationPath + @"\" + Files))
                    {
                        Dts.Events.FireInformation(1, "", "Folder of Files is Missing !! ", "", 0, ref FireAgain);
                        Dts.Events.FireInformation(1, "", "Creating folder for Files...", "", 0, ref FireAgain);
                        Directory.CreateDirectory(DestinationPath + @"\" + Files);
                        Dts.Events.FireInformation(1, "", Files + " Successfuly Created !! ", "", 0, ref FireAgain);
                    }
                    else
                    {
                        Dts.Events.FireInformation(1, "", "Files Folder Exists.!", "", 0, ref FireAgain);
                    }

                    Failure = false; // 

                }


                Dts.Events.FireInformation(1, "", "-----CHECKING SSIS DIRECTORY ENDED-----", "", 0, ref FireAgain);

            }
            catch (Exception ex)
            {
                Dts.Variables["User::_ExceptionMessage"].Value = ex.ToString();
                Dts.Events.FireError(0, "ERROR MESSAGE", ex.ToString(), String.Empty, 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1b78d5f4bc06429a839fe0485cf34f7f.Properties.Settings.get_Default():ST_1b78d5f4bc06429a839fe0485cf34f7f.Properties.Sett" +
    "ings")]

namespace ST_1b78d5f4bc06429a839fe0485cf34f7f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1b78d5f4bc06429a839fe0485cf34f7f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1b78d5f4bc06429a839fe0485cf34f7f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1b78d5f4bc06429a839fe0485cf34f7f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1b78d5f4bc06429a839fe0485cf34f7f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1b78d5f4bc06429a839fe0485cf34f7f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_1b78d5f4bc06429a839fe0485cf34f7f</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_1b78d5f4bc06429a839fe0485cf34f7f</msb:DisplayName>
		<msb:ProjectId>{D9546EDD-41E3-46DF-AD2F-CE0A58C8F6CD}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_a80e4f8af90648548dfae0dfaab75448.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="CheckFileFolder.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1b78d5f4bc06429a839fe0485cf34f7f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1b78d5f4bc06429a839fe0485cf34f7f")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_a80e4f8af90648548dfae0dfaab75448.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{820EABC1-F14B-4C4A-ACEB-9CE34A44F105}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_1b78d5f4bc06429a839fe0485cf34f7f</RootNamespace><AssemblyName>ST_a80e4f8af90648548dfae0dfaab75448</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="CheckFileFolder.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST130</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
                  <BinaryItem
                    Name="ST_a80e4f8af90648548dfae0dfaab75448.dll">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
AAAKbyIAAApzIwAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKCQAAAoqLnMI
AAAGgAMAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAQBAAAI34AAHwE
AAAIBgAAI1N0cmluZ3MAAAAAhAoAAFgEAAAjVVMA3A4AABAAAAAjR1VJRAAAAOwOAACoAQAAI0Js
b2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAAIgAAAAUAAAAGAAAACQAAAAEAAAAkAAAA
AgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAArQMBAAAAAAAGAC8CwwQG
AL4CwwQGAHsBsAQPADcFAAAGAKgBOwQGABICOwQGAPMBOwQGAKUCOwQGAE8COwQGAGgCOwQGAL8B
OwQGANoBGgMKAIMCXAMKAPoAXAMGAE0E3gMGAOUD3gMGAF4BsAQGAMMF3gMGAHUE4wQGAFcEJgQO
AC4BlwMOAI8BlwMOABYBEQQGAEMBwwQKAIUDXAMSAHkFpQASAHgApQAGADYD3gMKAIUEXAMGAPgF
LgAGAGMELgAGAMUA3gMGAIEA3gMGAOkFOwQAAAAAJQAAAAAAAQABAAEAEAD2A/YCOQABAAEAAAAQ
AOoERgVJAAEAAwAAARAAgwVGBV0AAwAHAAMBAACcBQAAQQAEAAoAEQDqA6kAEQDqAK0AEQBoALEA
BgZXALUAVoCMBbgAVoDKALgAUCAAAAAAhgD8AwYAAQD8JAAAAACGGKMEBgABAAQlAAAAAIMYowQG
AAEADCUAAAAAkwhxBLwAAQA4JQAAAACTCNIAwQABAD8lAAAAAJMI3gDGAAEARyUAAAAAlgjKBcwA
AgBOJQAAAACGGKMEBgACAFYlAAAAAJEYqQTRAAIAAAABAPACCQCjBAEAEQCjBAYAGQCjBAoAKQCj
BBAAMQCjBBAAOQCjBBAAQQCjBBAASQCjBBAAUQCjBBAAWQCjBBAAYQCjBBAAaQCjBAYAiQCjBAYA
sQCjBBUAwQCjBAYAcQCUBSUAyQB1BSoA0QDVAy8A2QDcAjUAkQA0AzkA4QC8BT0A2QDmAkQAyQCq
BUkA6QABBE4A8QC1BVkA4QC8BV4A8QDyBWQA4QACBmoA6QCZBG0AyQDWBQEAcQCjBAYAkQCjBAYA
AQGTAHYAAQHlBX8AmQCjBIUAuQCjBAYACAAUAJ8ACAAYAKQAKQBzAAwBLgALAOQALgATAO0ALgAb
AAwBLgAjABUBLgArAD4BLgAzAD4BLgA7AD4BLgBDABUBLgBLAEQBLgBTAD4BLgBbAFsBQwBjAKQA
SQBzAAwBYQB7AKQAYwBrAKQAGwADAAEABAADAAAAdQTVAAAA8gDaAAAAzgXfAAIABAADAAIABQAF
AAEABgAFAAIABwAHAASAAAABAAAAjBxHUwAAAAAAAAEAAAAEAAAAAAAAAAAAAACNAF8AAAAAAA0A
AAAAAAAAAAAAAJYAPQMAAAAABAAAAAAAAAAAAAAAjQDeAwAAAAANAAAAAAAAAAAAAACWADgAAAAA
AAAAAAABAAAA9AQAAAUAAgAAAABTVF9hODBlNGY4YWY5MDY0ODU0OGRmYWUwZGZhYWI3NTQ0OAA8
TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18A
bXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5
cGVGcm9tSGFuZGxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJl
AGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmpl
Y3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUA
Q29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBE
ZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJp
YnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0
dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0
dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9p
bnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5
QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUAdmFsdWUAU1RfMWI3OGQ1ZjRiYzA2NDI5YTgz
OWZlMDQ4NWNmMzRmN2YAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNaWNyb3Nv
ZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2Ny
aXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfYTgwZTRm
OGFmOTA2NDg1NDhkZmFlMGRmYWFiNzU0NDguZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291
cmNlTWFuAFNjcmlwdE1haW4ARmlyZUluZm9ybWF0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5
c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEV4Y2VwdGlvbgBDdWx0dXJlSW5m
bwBEaXJlY3RvcnlJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBG
aXJlRXJyb3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfMWI3OGQ1ZjRiYzA2NDI5YTgzOWZl
MDQ4NWNmMzRmN2YuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVz
AFNUXzFiNzhkNWY0YmMwNjQyOWE4MzlmZTA0ODVjZjM0ZjdmLlByb3BlcnRpZXMAZ2V0X1Zhcmlh
YmxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfRXZlbnRzAEV4
aXN0cwBDb25jYXQAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AGdldF9Bc3NlbWJs
eQBDcmVhdGVEaXJlY3RvcnkARW1wdHkAAC0kAFAAcgBvAGoAZQBjAHQAOgA6AEQAaQByAF8AUgBv
AG8AdABQAGEAdABoAAADXAAANyQAUAByAG8AagBlAGMAdAA6ADoARABpAHIAXwBQAHIAbwBqAGUA
YwB0AEYAbwBsAGQAZQByAAAxJABQAHIAbwBqAGUAYwB0ADoAOgBEAGkAcgBfAEwAbwBnAHMARgBv
AGwAZABlAHIAADMkAFAAcgBvAGoAZQBjAHQAOgA6AEQAaQByAF8ARgBpAGwAZQBzAEYAbwBsAGQA
ZQByAAApVQBzAGUAcgA6ADoAXwBDAG8AbgB0AGEAaQBuAGUAcgBOAGEAbQBlAAAlRABJAFIARQBD
AFQATwBSAFkAIABDAEgARQBDAEsASQBOAEcAAAEAUy0ALQAtAC0ALQBDAEgARQBDAEsASQBOAEcA
IABTAFMASQBTACAARABJAFIARQBDAFQATwBSAFkAIABTAFQAQQBSAFQARQBEAC0ALQAtAC0ALQAB
HyAAaQBzACAATQBpAHMAcwBpAG4AZwAgACEAIQAgAAATQwByAGUAYQB0AGkAbgBnACAAAAkuAC4A
LgAgAAAxIABTAHUAYwBjAGUAcwBzAGYAdQBsAHkAIABDAHIAZQBhAHQAZQBkACAAIQAhACAAADdD
AHIAZQBhAHQAaQBuAGcAIABmAG8AbABkAGUAcgAgAGYAbwByACAATABvAGcAcwAuAC4ALgAAOUMA
cgBlAGEAdABpAG4AZwAgAGYAbwBsAGQAZQByACAAZgBvAHIAIABGAGkAbABlAHMALgAuAC4AACEg
AEYAbwBsAGQAZQByACAARQB4AGkAcwB0AHMALgAhAAA7RgBvAGwAZABlAHIAIABvAGYAIABMAG8A
ZwBzACAAaQBzACAATQBpAHMAcwBpAG4AZwAgACEAIQAgAAAnTABvAGcAIABGAG8AbABkAGUAcgAg
AEUAeABpAHMAdABzAC4AIQAAPUYAbwBsAGQAZQByACAAbwBmACAARgBpAGwAZQBzACAAaQBzACAA
TQBpAHMAcwBpAG4AZwAgACEAIQAgAAArRgBpAGwAZQBzACAARgBvAGwAZABlAHIAIABFAHgAaQBz
AHQAcwAuACEAAE8tAC0ALQAtAC0AQwBIAEUAQwBLAEkATgBHACAAUwBTAEkAUwAgAEQASQBSAEUA
QwBUAE8AUgBZACAARQBOAEQARQBEAC0ALQAtAC0ALQABL1UAcwBlAHIAOgA6AF8ARQB4AGMAZQBw
AHQAaQBvAG4ATQBlAHMAcwBhAGcAZQAAG0UAUgBSAE8AUgAgAE0ARQBTAFMAQQBHAEUAAHFTAFQA
XwAxAGIANwA4AGQANQBmADQAYgBjADAANgA0ADIAOQBhADgAMwA5AGYAZQAwADQAOAA1AGMAZgAz
ADQAZgA3AGYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAC6Frwp
m4f8QZAMTOx0gnHgAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFVCQcGAg4ODg4SPQQgABJlBCAA
EmkFIAESbRwDIAAcAyAADgYAAw4ODg4EIAEBHAQgABJ1CiAGAQgODg4IEAIEAAECDgUAAg4ODgUA
ARJ9DgIGDgggBQIIDg4OCAgAARKAgRGAhQUgABKAiQcgAgEOEoCJCLd6XFYZNOCJCImEXc2AgMyR
BAAAAAAEAQAAAAMGEk0DBhJRAwYSEAIGCAMGERQEAAASTQQAABJRBQABARJRBAAAEhADAAABBAgA
Ek0ECAASUQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIA
AAAAACgBACNTVF8xYjc4ZDVmNGJjMDY0MjlhODM5ZmUwNDg1Y2YzNGY3ZgAABQEAAAAAFgEAEUNv
cHlyaWdodCBAICAyMDE5AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1l
d29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQAAALQAAADOyu++AQAAAJEAAABsU3lz
dGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwg
Q3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5S
ZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADYNgAAAAAA
AAAAAADyNgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5DYAAAAAAAAAAAAAAABfQ29yRGxsTWFp
bgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAEdTjBwAAAEAR1OMHD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8AMQBiADcAOABkADUAZgA0AGIAYwAwADYANAAyADkAYQA4ADMAOQBmAGUAMAA0ADgANQBj
AGYAMwA0AGYANwBmAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcA
MwAwADgALgAyADEAMwAxADkAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8AYQA4ADAAZQA0AGYAOABhAGYAOQAwADYANAA4ADUANAA4AGQAZgBhAGUAMABkAGYAYQBhAGIA
NwA1ADQANAA4AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADkAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwBhADgAMABlADQAZgA4AGEAZgA5ADAANgA0ADgANQA0ADgAZABmAGEAZQAwAGQA
ZgBhAGEAYgA3ADUANAA0ADgALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8AMQBiADcAOABkADUAZgA0AGIAYwAwADYANAAyADkAYQA4ADMAOQBmAGUAMAA0ADgA
NQBjAGYAMwA0AGYANwBmAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA3ADMAMAA4AC4AMgAxADMAMQA5AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA3ADMAMAA4AC4AMgAxADMAMQA5AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAAQ3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\ETL START.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{A3D7105B-9F78-4406-BBBE-3E7C749A84D1}"
          DTS:From="Package\ETL START\Check File Directory"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\ETL START\Check Connections" />
      </DTS:PrecedenceConstraints>
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\ETL START.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{e8455cd8-35ef-4738-968d-b5c2560dd533}"
          DTS:EventID="16"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{cbdd2ea5-1296-4133-a24f-b0dd9b2c1559}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables />
        </DTS:EventHandler>
        <DTS:EventHandler
          DTS:refId="Package\ETL START.EventHandlers[OnTaskFailed]"
          DTS:CreationName="OnTaskFailed"
          DTS:DTSID="{78d27359-80e6-47f9-a40f-4edf68124b28}"
          DTS:EventID="0"
          DTS:EventName="OnTaskFailed"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{0d74ea74-a642-4758-b6b7-020883cc48d4}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables />
        </DTS:EventHandler>
      </DTS:EventHandlers>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SEND FAILURE MESSAGE VIA EMAIL INCLUDING LOGS"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{1233f788-1338-4871-bb41-62f2f63b7f64}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SEND FAILURE MESSAGE VIA EMAIL INCLUDING LOGS"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_e501ae04969041da849c34af7492808b"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::PackageName,$Project::EmailServer,$Project::EmailPort,$Project::Cred_Email,$Project::Cred_Password,$Project::EmailSubject,$Project::EmailPriority,$Project::Proj_Name,$Project::Dir_FilesFolder,$Project::Dir_LogsFolder,$Project::Dir_ProjectFolder,$Project::Dir_RootPath,$Project::Logs_EmailReceiver,$Project::Logs_EmailReceiverCC"
          ReadWriteVariables="User::_ContainerName,User::_ExceptionMessage">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_e501ae04969041da849c34af7492808b.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{ea932583-9156-4927-847d-8babf298a818}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_d419d21c9ac044f0a7d76258d8d72ef6</RootNamespace><AssemblyName>ST_e501ae04969041da849c34af7492808b</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST130</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net.Mail;
using System.Text.RegularExpressions;
using System.IO;
#endregion

namespace ST_d419d21c9ac044f0a7d76258d8d72ef6
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            bool FireAgain = true;
            Dts.Events.FireInformation(1, "", "Sending Email..... ", "", 0, ref FireAgain);

            if (SendMail())
            {
                Dts.Events.FireInformation(1, "", "Success Sending Email..... ", "", 0, ref FireAgain);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            else
            {
                Dts.Events.FireInformation(1, "", "Failed Sending Email. ", "", 0, ref FireAgain);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
            Dts.Variables["User::_ContainerName"].Value = "";
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion


        public bool SendMail()
        {
            try
            {


                string ProjectName = Dts.Variables["$Project::Proj_Name"].Value.ToString();
                string PackageName = Dts.Variables["System::PackageName"].Value.ToString();

                string CredEmail = Dts.Variables["$Project::Cred_Email"].Value.ToString();
                string CredPassword = Dts.Variables["$Project::Cred_Password"].Value.ToString();
                string EmailServer = Dts.Variables["$Project::EmailServer"].Value.ToString();
                string EmailPort = Dts.Variables["$Project::EmailPort"].Value.ToString();
                int EmailPriority = Convert.ToInt32(Dts.Variables["$Project::EmailPriority"].Value);

               

                string EmailSubject = Dts.Variables["User::_ContainerName"].Value.ToString() + " FAILED";

                //RECEIVER OF LOGS
                string LogsReceiver = Dts.Variables["$Project::Logs_EmailReceiver"].Value.ToString();
                string LogsReceiverCC = Dts.Variables["$Project::Logs_EmailReceiverCC"].Value.ToString();

                //@[$Project::Dir_RootPath] + "\\" +                @[$Project::Dir_ProjectFolder] + "\\" +                             @[$Project::Dir_LogsFolder] + "\\" +                               @[System::PackageName] + "-Logs_" +   SUBSTRING((DT_WSTR,30)GETDATE(),1,10)+  ".txt"
                string LogsFile = Dts.Variables["$Project::Dir_RootPath"].Value.ToString() + "\\" + Dts.Variables["$Project::Dir_ProjectFolder"].Value.ToString() + "\\" + Dts.Variables["$Project::Dir_LogsFolder"].Value.ToString() + "\\" + Dts.Variables["System::PackageName"].Value.ToString() + "-Logs_" + DateTime.Now.ToString("yyyy-MM-dd") + ".txt";


                string theMessage = Dts.Variables["User::_ExceptionMessage"].Value.ToString();


                using (SmtpClient smtpClient = new SmtpClient())
                {
                    using (MailMessage message = new MailMessage())
                    {
                        MailAddress fromAddress = new MailAddress(CredEmail, CredEmail);

                        //You can have multiple emails separated by ;
                        string[] sEmailTo = Regex.Split(LogsReceiver, ";");
                        string[] sEmailCC = Regex.Split(LogsReceiverCC, ";");
                        int sEmailServerSMTP = int.Parse(EmailPort);

                        smtpClient.Host = EmailServer;
                        smtpClient.Port = sEmailServerSMTP;
                        smtpClient.EnableSsl = true;

                        System.Net.NetworkCredential myCredentials =
                        new System.Net.NetworkCredential(CredEmail, CredPassword);
                        smtpClient.Credentials = myCredentials;

                        message.From = fromAddress;

                        if (sEmailTo != null)
                        {
                            for (int i = 0; i < sEmailTo.Length; ++i)
                            {
                                if (sEmailTo[i] != null && sEmailTo[i] != "")
                                {
                                    message.To.Add(sEmailTo[i]);
                                }
                                message.To.Add(sEmailTo[i]);
                            }
                        }

                        if (sEmailCC != null)
                        {
                            for (int i = 0; i < sEmailCC.Length; ++i)
                            {
                                if (sEmailCC[i] != null && sEmailCC[i] != "")
                                {
                                    message.To.Add(sEmailCC[i]);
                                }
                            }
                        }



                        switch (EmailPriority)
                        {
                            case 1:
                                message.Priority = MailPriority.High;
                                break;
                            case 3:
                                message.Priority = MailPriority.Low;
                                break;
                            default:
                                message.Priority = MailPriority.Normal;
                                break;
                        }

                        //Attachment myAttachment = new Attachment(D:/ FF / test.txt);
                        //message.Attachments.Add(myAttachment);



                        File.Copy(LogsFile, LogsFile.Replace(".txt", "-COPY.txt"), true);

                        Attachment myAttachment = new Attachment(LogsFile.Replace(".txt", "-COPY.txt"));
                        message.Attachments.Add(myAttachment);


                        //message.Priority = MailPriority.High;
                        message.Subject = EmailSubject;
                        message.IsBodyHtml = true;


                        message.Body ="Hi Team !,"+
                            "<br><br><b>Project Name : </b>"+ ProjectName +
                            "<br><b>Package Name : </b>" + PackageName +
                            "<br><br><b>Issue : </b>" + theMessage  + 
                            "<br><b>Recommendation : </b>Please look into the issue and fix it !"+
                            "<br><br>Thanks !"+
                            "<br> SSIS and BI Team";
                        message.From = new MailAddress(CredEmail, "SSIS NOTIFICATION");

                        smtpClient.Send(message);


                    }
                }
                File.Delete(LogsFile.Replace(".txt", "-COPY.txt"));
                return true;
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(1, "", ex.ToString(), "", 0);
                return false;
            }
        }


    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_d419d21c9ac044f0a7d76258d8d72ef6</msb:CodeName>
		<msb:DisplayName>ST_d419d21c9ac044f0a7d76258d8d72ef6</msb:DisplayName>
		<msb:ProjectId>{4D278434-32AD-4596-88BA-FF32C770311E}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_e501ae04969041da849c34af7492808b.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d419d21c9ac044f0a7d76258d8d72ef6.Properties.Settings.get_Default():ST_d419d21c9ac044f0a7d76258d8d72ef6.Properties.Sett" +
    "ings")]

namespace ST_d419d21c9ac044f0a7d76258d8d72ef6.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_d419d21c9ac044f0a7d76258d8d72ef6")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_d419d21c9ac044f0a7d76258d8d72ef6")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d419d21c9ac044f0a7d76258d8d72ef6.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d419d21c9ac044f0a7d76258d8d72ef6.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d419d21c9ac044f0a7d76258d8d72ef6.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_d419d21c9ac044f0a7d76258d8d72ef6.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_d419d21c9ac044f0a7d76258d8d72ef6.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_e501ae04969041da849c34af7492808b.dll">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
AACGAM0EBgABAAwhAAAAAIYATwRBAQEA5CUAAAAAhhiYBQYAAQDsJQAAAACDGJgFBgABAPQlAAAA
AJMIZgVFAQEAICYAAAAAkwhCAUoBAQAnJgAAAACTCE4BTwEBAC8mAAAAAJYIIAdVAQIANiYAAAAA
hhiYBQYAAgA+JgAAAACRGJ4FWgECAAAAAQB1AwkAmAUBABEAmAUGABkAmAUKACkAmAUQADEAmAUQ
ADkAmAUQAEEAmAUQAEkAmAUQAFEAmAUQAFkAmAUQAGEAmAUQAGkAmAUGALkAmAUGAOEAmAUVAPEA
mAUGAHEAxAYfAPkA6gYkAAEB0gQqAPkALAcBAPkAagY1AAkBnQQ7ABEBawNCABEBYQNsAMEAlQNw
ABkBDgB0ACEB9QZ5AHkAfgd/AHkAlQOEACEB9QaJAIEAmAUGAIkAmAUGAJEAmAWPACkBGgeVADEB
pgGcAIEAYgcQAIEAWQcBAIEAjwShAJkAmAWPAIEAgQamAIkArQStACEBpwezAIkAUwW5AEEBoQAQ
AIkAtQe/ACEBqgDGAFEBogfMAKEAmAUQAIkA2gbTAAwAoQDhAIkAAwcQAIkAgAShAIkAjAcQAIEA
pQDnAGkBngEGAFEBwQHtAAEBjgXyAHEAmAUGAMEAmAUGAHEB9QD7AHEBlQcEAckAmAUKAekAmAUG
AAgAFAAkAQgAGAApASkAcwCVAS4ACwBtAS4AEwB2AS4AGwCVAS4AIwCeAS4AKwDHAS4AMwDHAS4A
OwDHAS4AQwCeAS4ASwDNAS4AUwDHAS4AWwDkAUMAYwApAUkAcwCVAWEAewApAWMAawApARsARwAD
AAEABAADAAAAagVeAQAAYgFjAQAAJAdoAQIABQADAAIABgAFAAEABwAFAAIACAAHANkABIAAAAEA
AACMHCxhAAAAAAAAdAAAAAQAAAAAAAAAAAAAABIBmAAAAAAADQAAAAAAAAAAAAAAGwGeAwAAAAAE
AAAAAAAAAAAAAAASAaYEAAAAAA0AAAAAAAAAAAAAABsBTQAAAAAAAAAAAAEAAADpBQAABQACAAAA
AAAAQ29sbGVjdGlvbmAxAFRvSW50MzIAU1RfZDQxOWQyMWM5YWMwNDRmMGE3ZDc2MjU4ZDhkNzJl
ZjYAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1
ZV9fAFNUX2U1MDFhZTA0OTY5MDQxZGE4NDljMzRhZjc0OTI4MDhiAG1zY29ybGliAEFkZABTZW5k
AFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAE1haWxNZXNzYWdlAFZhcmlhYmxlAElEaXNwb3NhYmxl
AFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEZpbGUARGF0ZVRpbWUATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBEaXNwb3NlAFBhcnNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAERlbGV0
ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRl
AERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0
bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0
cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0
QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQ
b2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxp
dHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJz
aW9uaW5nAFRvU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAE5ldHdvcmtDcmVkZW50aWFsAFN5c3RlbS5D
b2xsZWN0aW9ucy5PYmplY3RNb2RlbABTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50
TW9kZWwAU3lzdGVtLk5ldC5NYWlsAFNlbmRNYWlsAFNUX2U1MDFhZTA0OTY5MDQxZGE4NDljMzRh
Zjc0OTI4MDhiLmRsbABzZXRfSXNCb2R5SHRtbABzZXRfRW5hYmxlU3NsAGdldF9JdGVtAFN5c3Rl
bQBzZXRfRnJvbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4ARmlyZUluZm9ybWF0aW9uAFN5
c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9u
AE1haWxBZGRyZXNzQ29sbGVjdGlvbgBBdHRhY2htZW50Q29sbGVjdGlvbgBFeGNlcHRpb24AZ2V0
X1RvAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBG
aXJlRXJyb3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfZDQxOWQyMWM5YWMwNDRmMGE3ZDc2
MjU4ZDhkNzJlZjYuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVz
AFNUX2Q0MTlkMjFjOWFjMDQ0ZjBhN2Q3NjI1OGQ4ZDcyZWY2LlByb3BlcnRpZXMAZ2V0X1Zhcmlh
YmxlcwBTZXR0aW5ncwBzZXRfQ3JlZGVudGlhbHMAU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Np
b25zAFN1Y2Nlc3MATWFpbEFkZHJlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9BdHRhY2ht
ZW50cwBnZXRfRXZlbnRzAENvbmNhdABPYmplY3QAc2V0X1N1YmplY3QAU3lzdGVtLk5ldABTcGxp
dABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABTbXRwQ2xpZW50AEF0dGFjaG1lbnQAQ29udmVy
dABzZXRfUG9ydABzZXRfSG9zdABJQ3JlZGVudGlhbHNCeUhvc3QAZ2V0X05vdwBSZWdleABzZXRf
Qm9keQBnZXRfQXNzZW1ibHkAQ29weQBvcF9JbmVxdWFsaXR5AHNldF9Qcmlvcml0eQBNYWlsUHJp
b3JpdHkAAAABACdTAGUAbgBkAGkAbgBnACAARQBtAGEAaQBsAC4ALgAuAC4ALgAgAAA3UwB1AGMA
YwBlAHMAcwAgAFMAZQBuAGQAaQBuAGcAIABFAG0AYQBpAGwALgAuAC4ALgAuACAAAC1GAGEAaQBs
AGUAZAAgAFMAZQBuAGQAaQBuAGcAIABFAG0AYQBpAGwALgAgAAApVQBzAGUAcgA6ADoAXwBDAG8A
bgB0AGEAaQBuAGUAcgBOAGEAbQBlAAAnJABQAHIAbwBqAGUAYwB0ADoAOgBQAHIAbwBqAF8ATgBh
AG0AZQAAJ1MAeQBzAHQAZQBtADoAOgBQAGEAYwBrAGEAZwBlAE4AYQBtAGUAACkkAFAAcgBvAGoA
ZQBjAHQAOgA6AEMAcgBlAGQAXwBFAG0AYQBpAGwAAC8kAFAAcgBvAGoAZQBjAHQAOgA6AEMAcgBl
AGQAXwBQAGEAcwBzAHcAbwByAGQAACskAFAAcgBvAGoAZQBjAHQAOgA6AEUAbQBhAGkAbABTAGUA
cgB2AGUAcgAAJyQAUAByAG8AagBlAGMAdAA6ADoARQBtAGEAaQBsAFAAbwByAHQAAC8kAFAAcgBv
AGoAZQBjAHQAOgA6AEUAbQBhAGkAbABQAHIAaQBvAHIAaQB0AHkAAA8gAEYAQQBJAEwARQBEAAA5
JABQAHIAbwBqAGUAYwB0ADoAOgBMAG8AZwBzAF8ARQBtAGEAaQBsAFIAZQBjAGUAaQB2AGUAcgAA
PSQAUAByAG8AagBlAGMAdAA6ADoATABvAGcAcwBfAEUAbQBhAGkAbABSAGUAYwBlAGkAdgBlAHIA
QwBDAAAtJABQAHIAbwBqAGUAYwB0ADoAOgBEAGkAcgBfAFIAbwBvAHQAUABhAHQAaAAAA1wAADck
AFAAcgBvAGoAZQBjAHQAOgA6AEQAaQByAF8AUAByAG8AagBlAGMAdABGAG8AbABkAGUAcgAAMSQA
UAByAG8AagBlAGMAdAA6ADoARABpAHIAXwBMAG8AZwBzAEYAbwBsAGQAZQByAAANLQBMAG8AZwBz
AF8AARV5AHkAeQB5AC0ATQBNAC0AZABkAAEJLgB0AHgAdAAAL1UAcwBlAHIAOgA6AF8ARQB4AGMA
ZQBwAHQAaQBvAG4ATQBlAHMAcwBhAGcAZQAAAzsAABMtAEMATwBQAFkALgB0AHgAdAABUUgAaQAg
AFQAZQBhAG0AIAAhACwAPABiAHIAPgA8AGIAcgA+ADwAYgA+AFAAcgBvAGoAZQBjAHQAIABOAGEA
bQBlACAAOgAgADwALwBiAD4AADU8AGIAcgA+ADwAYgA+AFAAYQBjAGsAYQBnAGUAIABOAGEAbQBl
ACAAOgAgADwALwBiAD4AAC88AGIAcgA+ADwAYgByAD4APABiAD4ASQBzAHMAdQBlACAAOgAgADwA
LwBiAD4AAIDRPABiAHIAPgA8AGIAPgBSAGUAYwBvAG0AbQBlAG4AZABhAHQAaQBvAG4AIAA6ACAA
PAAvAGIAPgBQAGwAZQBhAHMAZQAgAGwAbwBvAGsAIABpAG4AdABvACAAdABoAGUAIABpAHMAcwB1
AGUAIABhAG4AZAAgAGYAaQB4ACAAaQB0ACAAIQA8AGIAcgA+ADwAYgByAD4AVABoAGEAbgBrAHMA
IAAhADwAYgByAD4AIABTAFMASQBTACAAYQBuAGQAIABCAEkAIABUAGUAYQBtAAAjUwBTAEkAUwAg
AE4ATwBUAEkARgBJAEMAQQBUAEkATwBOAABxUwBUAF8AZAA0ADEAOQBkADIAMQBjADkAYQBjADAA
NAA0AGYAMABhADcAZAA3ADYAMgA1ADgAZAA4AGQANwAyAGUAZgA2AC4AUAByAG8AcABlAHIAdABp
AGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAACLNp+ueL90SJKXoI0P7QUvAAQgAQEIAyAAAQUgAQER
EQQgAQEOBSABARFtAwcBAgQgABJ9BSAAEoCBCiAGAQgODg4IEAIFIAASgIUGIAESgIkcBCABARwk
BxkODg4ODg4IDg4ODg4RPRJBEkUSSR0OHQ4IEk0SUQgIAhJVAyAAHAMgAA4EAAEIHAUAAg4ODgQA
ABE9BCABDg4FAAEOHQ4FIAIBDg4GAAIdDg4OBAABCA4EIAEBAgYgAQESgJ0FIAEBEkkFAAICDg4F
IAASgKEGIAEBEYClBSACDg4OBgADAQ4OAgUgABKArQcVEoCxARJRBSABARMABSABARJFBAABAQ4I
IAUCCA4ODggIAAESgLkRgL0FIAASgMEHIAIBDhKAwQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEA
AAADBhJlAwYSaQMGEhACBggDBhEUAyAAAgQAABJlBAAAEmkFAAEBEmkEAAASEAMAAAEECAASZQQI
ABJpBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAA
KAEAI1NUX2Q0MTlkMjFjOWFjMDQ0ZjBhN2Q3NjI1OGQ4ZDcyZWY2AAAFAQAAAAAWAQARQ29weXJp
Z2h0IEAgIDIwMTkAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3Jr
RGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5S
ZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1
cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3Vy
Y2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAZDwAAAAAAAAAAAAA
fjwAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHA8AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNj
b3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABACxhjBwAAAEALGGMHD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AZAA0ADEAOQBkADIAMQBjADkAYQBjADAANAA0AGYAMABhADcAZAA3ADYAMgA1ADgAZAA4AGQA
NwAyAGUAZgA2AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcAMwAw
ADgALgAyADQAOAA3ADYAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
ZQA1ADAAMQBhAGUAMAA0ADkANgA5ADAANAAxAGQAYQA4ADQAOQBjADMANABhAGYANwA0ADkAMgA4
ADAAOABiAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADkAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABl
AG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUA
AABTAFQAXwBlADUAMAAxAGEAZQAwADQAOQA2ADkAMAA0ADEAZABhADgANAA5AGMAMwA0AGEAZgA3
ADQAOQAyADgAMAA4AGIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAA
UwBUAF8AZAA0ADEAOQBkADIAMQBjADkAYQBjADAANAA0AGYAMABhADcAZAA3ADYAMgA1ADgAZAA4
AGQANwAyAGUAZgA2AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA3ADMAMAA4AC4AMgA0ADgANwA2AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgA3ADMAMAA4AC4AMgA0ADgANwA2AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAJA8AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\STAGING DATA LOAD"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{7e716ff1-b576-42ad-80a6-e502b354d461}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="STAGING DATA LOAD">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\STAGING DATA LOAD\Staging Data Load END"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{9a31f7d6-fdc9-409f-a9ec-3e6c8dd7e70d}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Staging Data Load END"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_698e6fa62ae74a9f93a413aa2b09590e"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadWriteVariables="User::_ContainerName,User::_ExceptionMessage">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_fb42c83ab9bb4fcbb089bae1dc9e2944")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_fb42c83ab9bb4fcbb089bae1dc9e2944")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_698e6fa62ae74a9f93a413aa2b09590e.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{c0fef7cf-0653-4aea-a58f-a2f0273f1d95}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_fb42c83ab9bb4fcbb089bae1dc9e2944</RootNamespace><AssemblyName>ST_698e6fa62ae74a9f93a413aa2b09590e</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST130</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_fb42c83ab9bb4fcbb089bae1dc9e2944
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
        {
            bool FireAgain = true;
            Dts.Events.FireInformation(1, "", "-----STAGING DATA LOAD ENDED------ ", "", 0, ref FireAgain);
            // TODO: Add your code here
            Dts.Variables["User::_ContainerName"].Value = "";
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_fb42c83ab9bb4fcbb089bae1dc9e2944</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_fb42c83ab9bb4fcbb089bae1dc9e2944</msb:DisplayName>
		<msb:ProjectId>{8B59E875-C6AA-4666-8525-C198C6A1E12F}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_698e6fa62ae74a9f93a413aa2b09590e.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb42c83ab9bb4fcbb089bae1dc9e2944.Properties.Settings.get_Default():ST_fb42c83ab9bb4fcbb089bae1dc9e2944.Properties.Sett" +
    "ings")]

namespace ST_fb42c83ab9bb4fcbb089bae1dc9e2944.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb42c83ab9bb4fcbb089bae1dc9e2944.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb42c83ab9bb4fcbb089bae1dc9e2944.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb42c83ab9bb4fcbb089bae1dc9e2944.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_fb42c83ab9bb4fcbb089bae1dc9e2944.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_fb42c83ab9bb4fcbb089bae1dc9e2944.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_698e6fa62ae74a9f93a413aa2b09590e.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACwKEF4AAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAYi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABAuAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAaA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABE
LgAAAAAAAEgAAAACAAUAFCEAAEQMAAABAAAAAAAAAFgtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBwBRAAAAAQAAERcKAigQAAAKbxEAAAoXcgEAAHByAwAA
cHIBAABwFhIAbxIAAAoCKBAAAApvEwAACnJLAABwbxQAAApyAQAAcG8VAAAKAigQAAAKFm8WAAAK
Kh4CKBcAAAoqHgIoGAAACiqufgEAAAQtHnJ1AABw0AMAAAIoGQAACm8aAAAKcxsAAAqAAQAABH4B
AAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigcAAAKKi5zCAAABoADAAAEKgBCU0pCAQABAAAA
AAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADIAwAAI34AADQEAACoBQAAI1N0cmluZ3MAAAAA3AkA
AOgAAAAjVVMAxAoAABAAAAAjR1VJRAAAANQKAABwAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAA
APoBMwAWAAABAAAAHgAAAAUAAAAGAAAACQAAAAEAAAAcAAAAAgAAABAAAAABAAAAAgAAAAMAAAAE
AAAAAQAAAAQAAAABAAAAAQAAAAAAkAMBAAAAAAAGAEkChAQGANgChAQGAJUBcQQPAPgEAAAGAMIB
HgQGACwCHgQGAA0CHgQGAL8CHgQGAGkCHgQGAIICHgQGANkBHgQGAPQBBgMKAJ0CPwMKABQBPwMG
AMgDwQMGAHgBcQQGAHYFwQMGAEAEpAQGADAECQQOAEgBegMOAKkBegMOADAB9AMGAF0BhAQKAGgD
PwMKAFAEPwMSADoFvwASAJIAvwAGAN8AwQMGAJsAwQMGAJwFHgQAAAAAJQAAAAAAAQABAAEAEADZ
AwEAOQABAAEAAAAQAKsEBwVFAAEAAwAAARAARAUHBVkAAwAHAAMBAABdBQAAPQAEAAoAEQDNA3MA
EQAEAXcAEQCCAHsABgZNAH8AVoBNBYIAVoDkAIIAUCAAAAAAhgDfAwYAAQCtIAAAAACGGGQEBgAB
ALUgAAAAAIMYZAQGAAEAvSAAAAAAkwg8BIYAAQDpIAAAAACTCOwAiwABAPAgAAAAAJMI+ACQAAEA
+CAAAAAAlgh9BZYAAgD/IAAAAACGGGQEBgACAAchAAAAAJEYagSbAAIAAAABAAADCQBkBAEAEQBk
BAYAGQBkBAoAKQBkBBAAMQBkBBAAOQBkBBAAQQBkBBAASQBkBBAAUQBkBBAAWQBkBBAAYQBkBBAA
aQBkBAYAgQBkBAYAqQBkBBUAuQBkBAYAcQBVBR8AwQBrBSQAyQDkAykAwQA2BTQA0QC4AzkA2QD2
Aj8AwQCJBQEAcQBkBAYAiQBkBAYA4QCtAEQA4QCYBUsAkQBkBFAAsQBkBAYACAAUAGkACAAYAG4A
KQBzANYALgALAK4ALgATALcALgAbANYALgAjAN8ALgArAAgBLgAzAAgBLgA7AAgBLgBDAN8ALgBL
AA4BLgBTAAgBLgBbACUBQwBjAG4ASQBzANYAYQB7AG4AYwBrAG4AGwADAAEABAADAAAAQASfAAAA
DAGkAAAAgQWpAAIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAAjByWUgAAAAAAAF4AAAAE
AAAAAAAAAAAAAABXAFUAAAAAAA0AAAAAAAAAAAAAAGAAIAMAAAAABAAAAAAAAAAAAAAAVwDBAwAA
AAANAAAAAAAAAAAAAABgAC4AAAAAAAAAAAABAAAAtQQAAAUAAgAAAABTVF9mYjQyYzgzYWI5YmI0
ZmNiYjA4OWJhZTFkYzllMjk0NAA8TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWRE
VFMAdmFsdWVfXwBtc2NvcmxpYgBTVF82OThlNmZhNjJhZTc0YTlmOTNhNDEzYWEyYjA5NTkwZQBk
ZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5k
bGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1
cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFz
ZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdl
bmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVB
dHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUA
QXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2Vt
Ymx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENv
bXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFz
c2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0
ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUA
c2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcATWljcm9zb2Z0LlNxbFNl
cnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sA
U2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzY5OGU2ZmE2MmFlNzRh
OWY5M2E0MTNhYTJiMDk1OTBlLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBT
Y3JpcHRNYWluAEZpcmVJbmZvcm1hdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xv
YmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5h
Z2VyAEV2ZW50c09iamVjdFdyYXBwZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBT
eXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfZmI0MmM4
M2FiOWJiNGZjYmIwODliYWUxZGM5ZTI5NDQuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2Vz
AERlYnVnZ2luZ01vZGVzAFNUX2ZiNDJjODNhYjliYjRmY2JiMDg5YmFlMWRjOWUyOTQ0LlByb3Bl
cnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0
cwBnZXRfRXZlbnRzAE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABnZXRfQXNzZW1i
bHkAAAAAAAEARy0ALQAtAC0ALQBTAFQAQQBHAEkATgBHACAARABBAFQAQQAgAEwATwBBAEQAIABF
AE4ARABFAEQALQAtAC0ALQAtAC0AIAABKVUAcwBlAHIAOgA6AF8AQwBvAG4AdABhAGkAbgBlAHIA
TgBhAG0AZQAAcVMAVABfAGYAYgA0ADIAYwA4ADMAYQBiADkAYgBiADQAZgBjAGIAYgAwADgAOQBi
AGEAZQAxAGQAYwA5AGUAMgA5ADQANAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUA
cgBjAGUAcwAAADP+IiV4Cg1CpvhshZ2pi7IABCABAQgDIAABBSABARERBCABAQ4FIAEBEVEDBwEC
BCAAEmEEIAASZQogBgEIDg4OCBACBCAAEmkFIAESbRwEIAEBHAYAARJxEXUEIAASeQYgAgEOEnkI
t3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSSQMGEk0DBhIQAgYIAwYRFAQAABJJBAAAEk0F
AAEBEk0EAAASEAMAAAEECAASSQQIABJNBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNl
cHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2ZiNDJjODNhYjliYjRmY2JiMDg5YmFlMWRjOWUy
OTQ0AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjAAAEkBABouTkVURnJhbWV3b3JrLFZlcnNp
b249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41ALQAAADO
yu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5
MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFE
UEFEULQAAAA4LgAAAAAAAAAAAABSLgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARC4AAAAAAAAA
AAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCWUowcAAABAJZSjBw/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfAGYAYgA0ADIAYwA4ADMAYQBiADkAYgBiADQAZgBjAGIAYgAwADgAOQBiAGEAZQAx
AGQAYwA5AGUAMgA5ADQANAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA3ADMAMAA4AC4AMgAxADEANAAyAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADYAOQA4AGUANgBmAGEANgAyAGEAZQA3ADQAYQA5AGYAOQAzAGEANAAxADMAYQBhADIA
YgAwADkANQA5ADAAZQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8ANgA5ADgAZQA2AGYAYQA2ADIAYQBlADcANABhADkAZgA5ADMAYQA0ADEA
MwBhAGEAMgBiADAAOQA1ADkAMABlAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGYAYgA0ADIAYwA4ADMAYQBiADkAYgBiADQAZgBjAGIAYgAwADgAOQBiAGEA
ZQAxAGQAYwA5AGUAMgA5ADQANAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANwAzADAAOAAuADIAMQAxADQAMgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwAzADAAOAAuADIAMQAxADQAMgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABkPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\STAGING DATA LOAD\Staging Data Load START"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{B1B0A965-FDA0-40B9-B3D2-B07F7DA6B352}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Staging Data Load START"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_fb42c83ab9bb4fcbb089bae1dc9e2944"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadWriteVariables="User::_ContainerName,User::_ExceptionMessage">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_fb42c83ab9bb4fcbb089bae1dc9e2944")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_fb42c83ab9bb4fcbb089bae1dc9e2944")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_fb42c83ab9bb4fcbb089bae1dc9e2944
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
        {
            bool FireAgain = true;
            Dts.Events.FireInformation(1, "", "-----STAGING DATA LOAD STARTED------ ", "", 0, ref FireAgain);
            // TODO: Add your code here
            Dts.Variables["User::_ContainerName"].Value = "STAGING DATA LOAD";
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_fb42c83ab9bb4fcbb089bae1dc9e2944.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{c0fef7cf-0653-4aea-a58f-a2f0273f1d95}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_fb42c83ab9bb4fcbb089bae1dc9e2944</RootNamespace>
    <AssemblyName>ST_fb42c83ab9bb4fcbb089bae1dc9e2944</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_fb42c83ab9bb4fcbb089bae1dc9e2944</msb:CodeName>
		<msb:DisplayName>ST_fb42c83ab9bb4fcbb089bae1dc9e2944</msb:DisplayName>
		<msb:ProjectId>{8B59E875-C6AA-4666-8525-C198C6A1E12F}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_fb42c83ab9bb4fcbb089bae1dc9e2944.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb42c83ab9bb4fcbb089bae1dc9e2944.Properties.Settings.get_Default():ST_fb42c83ab9bb4fcbb089bae1dc9e2944.Properties.Sett" +
    "ings")]

namespace ST_fb42c83ab9bb4fcbb089bae1dc9e2944.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb42c83ab9bb4fcbb089bae1dc9e2944.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb42c83ab9bb4fcbb089bae1dc9e2944.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fb42c83ab9bb4fcbb089bae1dc9e2944.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_fb42c83ab9bb4fcbb089bae1dc9e2944.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_fb42c83ab9bb4fcbb089bae1dc9e2944.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_fb42c83ab9bb4fcbb089bae1dc9e2944.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAF8JEF4AAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAZi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABQuAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAbA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABI
LgAAAAAAAEgAAAACAAUAFCEAAEgMAAABAAAAAAAAAFwtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBwBRAAAAAQAAERcKAigQAAAKbxEAAAoXcgEAAHByAwAA
cHIBAABwFhIAbxIAAAoCKBAAAApvEwAACnJPAABwbxQAAApyeQAAcG8VAAAKAigQAAAKFm8WAAAK
Kh4CKBcAAAoqHgIoGAAACiqufgEAAAQtHnKdAABw0AMAAAIoGQAACm8aAAAKcxsAAAqAAQAABH4B
AAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigcAAAKKi5zCAAABoADAAAEKgBCU0pCAQABAAAA
AAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADIAwAAI34AADQEAACEBQAAI1N0cmluZ3MAAAAAuAkA
ABABAAAjVVMAyAoAABAAAAAjR1VJRAAAANgKAABwAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAA
APoBMwAWAAABAAAAHgAAAAUAAAAGAAAACQAAAAEAAAAcAAAAAgAAABAAAAABAAAAAgAAAAMAAAAE
AAAAAQAAAAQAAAABAAAAAQAAAAAAbAMBAAAAAAAGACUCYAQGALQCYAQGAHEBTQQPANQEAAAGAJ4B
+gMGAAgC+gMGAOkB+gMGAJsC+gMGAEUC+gMGAF4C+gMGALUB+gMGANAB4gIKAHkCGwMKAPAAGwMG
AKQDnQMGAFQBTQQGAFIFnQMGABwEgAQGAAwE5QMOACQBVgMOAIUBVgMOAAwB0AMGADkBYAQKAEQD
GwMKACwEGwMSABYFmwASAG4AmwAGALsAnQMGAHcAnQMGAHgF+gMAAAAAJQAAAAAAAQABAAEAEAC1
AwEAOQABAAEAAAAQAIcE4wRFAAEAAwAAARAAIAXjBFkAAwAHAAMBAAA5BQAAPQAEAAoAEQCpA3MA
EQDgAHcAEQBeAHsABgZNAH8AVoApBYIAVoDAAIIAUCAAAAAAhgC7AwYAAQCtIAAAAACGGEAEBgAB
ALUgAAAAAIMYQAQGAAEAvSAAAAAAkwgYBIYAAQDpIAAAAACTCMgAiwABAPAgAAAAAJMI1ACQAAEA
+CAAAAAAlghZBZYAAgD/IAAAAACGGEAEBgACAAchAAAAAJEYRgSbAAIAAAABANwCCQBABAEAEQBA
BAYAGQBABAoAKQBABBAAMQBABBAAOQBABBAAQQBABBAASQBABBAAUQBABBAAWQBABBAAYQBABBAA
aQBABAYAgQBABAYAqQBABBUAuQBABAYAcQAxBR8AwQBHBSQAyQDAAykAwQASBTQA0QCUAzkA2QDS
Aj8AwQBlBQEAcQBABAYAiQBABAYA4QCJAEQA4QB0BUsAkQBABFAAsQBABAYACAAUAGkACAAYAG4A
KQBzANYALgALAK4ALgATALcALgAbANYALgAjAN8ALgArAAgBLgAzAAgBLgA7AAgBLgBDAN8ALgBL
AA4BLgBTAAgBLgBbACUBQwBjAG4ASQBzANYAYQB7AG4AYwBrAG4AGwADAAEABAADAAAAHASfAAAA
6ACkAAAAXQWpAAIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAAjBwvUgAAAAAAAAEAAAAE
AAAAAAAAAAAAAABXAFUAAAAAAA0AAAAAAAAAAAAAAGAA/AIAAAAABAAAAAAAAAAAAAAAVwCdAwAA
AAANAAAAAAAAAAAAAABgAC4AAAAAAAAAAAABAAAAkQQAAAUAAgAAAABTVF9mYjQyYzgzYWI5YmI0
ZmNiYjA4OWJhZTFkYzllMjk0NAA8TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWRE
VFMAdmFsdWVfXwBtc2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUAUnVudGltZVR5cGVI
YW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBU
eXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFS
VFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93
c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2Rl
QXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFz
c2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJh
bWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURl
c2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1i
bHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRU
YXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNv
bXBhdGliaWxpdHlBdHRyaWJ1dGUAc2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNp
b25pbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1v
ZGVsAFNUX2ZiNDJjODNhYjliYjRmY2JiMDg5YmFlMWRjOWUyOTQ0LmRsbABnZXRfSXRlbQBTeXN0
ZW0ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAEZpcmVJbmZvcm1hdGlvbgBTeXN0ZW0uQ29u
ZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJl
SW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAEV2ZW50c09iamVjdFdyYXBwZXIALmN0b3IALmNjdG9y
AFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3Rl
bS5SZXNvdXJjZXMAU1RfZmI0MmM4M2FiOWJiNGZjYmIwODliYWUxZGM5ZTI5NDQuUHJvcGVydGll
cy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2ZiNDJjODNhYjliYjRmY2Ji
MDg5YmFlMWRjOWUyOTQ0LlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBTdWNjZXNz
AGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfRXZlbnRzAE9iamVjdABnZXRfRGVmYXVsdABzZXRf
VGFza1Jlc3VsdABnZXRfQXNzZW1ibHkAAAAAAAEASy0ALQAtAC0ALQBTAFQAQQBHAEkATgBHACAA
RABBAFQAQQAgAEwATwBBAEQAIABTAFQAQQBSAFQARQBEAC0ALQAtAC0ALQAtACAAASlVAHMAZQBy
ADoAOgBfAEMAbwBuAHQAYQBpAG4AZQByAE4AYQBtAGUAACNTAFQAQQBHAEkATgBHACAARABBAFQA
QQAgAEwATwBBAEQAAHFTAFQAXwBmAGIANAAyAGMAOAAzAGEAYgA5AGIAYgA0AGYAYwBiAGIAMAA4
ADkAYgBhAGUAMQBkAGMAOQBlADIAOQA0ADQALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMA
bwB1AHIAYwBlAHMAAAC/Lb6G5yowQrzOH97l4teJAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFR
AwcBAgQgABJhBCAAEmUKIAYBCA4ODggQAgQgABJpBSABEm0cBCABARwGAAEScRF1BCAAEnkGIAIB
DhJ5CLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEkkDBhJNAwYSEAIGCAMGERQEAAASSQQA
ABJNBQABARJNBAAAEhADAAABBAgAEkkECAASTQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9u
RXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9mYjQyYzgzYWI5YmI0ZmNiYjA4OWJhZTFk
YzllMjk0NAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIwAABJAQAaLk5FVEZyYW1ld29yayxW
ZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAAPC4AAAAAAAAAAAAAVi4AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEguAAAA
AAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQAvUowcAAABAC9SjBw/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfAGYAYgA0ADIAYwA4ADMAYQBiADkAYgBiADQAZgBjAGIAYgAwADgAOQBiAGEAZQAx
AGQAYwA5AGUAMgA5ADQANAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA3ADMAMAA4AC4AMgAxADAAMwA5AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfAGYAYgA0ADIAYwA4ADMAYQBiADkAYgBiADQAZgBjAGIAYgAwADgAOQBiAGEAZQAxAGQA
YwA5AGUAMgA5ADQANAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AZgBiADQAMgBjADgAMwBhAGIAOQBiAGIANABmAGMAYgBiADAAOAA5AGIA
YQBlADEAZABjADkAZQAyADkANAA0AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGYAYgA0ADIAYwA4ADMAYQBiADkAYgBiADQAZgBjAGIAYgAwADgAOQBiAGEA
ZQAxAGQAYwA5AGUAMgA5ADQANAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANwAzADAAOAAuADIAMQAwADMAOQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwAzADAAOAAuADIAMQAwADMAOQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABoPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\STAGING DATA LOAD\TESTING"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{ab6cbf7c-8e64-4efd-9351-98915f15508e}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="TESTING"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1" />
          <DTS:ObjectData>
            <pipeline
              version="1" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\STAGING DATA LOAD.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{91DA7733-89AD-4C32-B38B-7695B74A0C44}"
          DTS:From="Package\STAGING DATA LOAD\Staging Data Load START"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\STAGING DATA LOAD\TESTING" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\STAGING DATA LOAD.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{7BBEF8AF-2A45-407E-B8C7-FE0A82A1E8FB}"
          DTS:From="Package\STAGING DATA LOAD\TESTING"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\STAGING DATA LOAD\Staging Data Load END" />
      </DTS:PrecedenceConstraints>
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\STAGING DATA LOAD.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{023fd893-5723-4963-8c62-e637418d147f}"
          DTS:EventID="0"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{ac94806f-eeed-4d37-8dd6-1d761c8ec4c0}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables />
        </DTS:EventHandler>
      </DTS:EventHandlers>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{828F4CD2-91B6-465F-A935-2B9BF940720B}"
      DTS:From="Package\ETL START"
      DTS:ObjectName="Constraint"
      DTS:To="Package\SEND FAILURE MESSAGE VIA EMAIL INCLUDING LOGS"
      DTS:Value="1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{FDFE9D85-6AE8-4AE8-9B57-2EEBD32135B7}"
      DTS:From="Package\ETL START"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\STAGING DATA LOAD" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{1DFCB6EF-9473-4E05-8E21-D6F5586EC0BB}"
      DTS:From="Package\STAGING DATA LOAD"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\SEND FAILURE MESSAGE VIA EMAIL INCLUDING LOGS"
      DTS:Value="1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{4B1EE3B3-583F-4853-A5DF-361C79715999}"
      DTS:From="Package\STAGING DATA LOAD"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\DIMENSION AND FACT DATA LOAD" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{0464E512-76D0-420E-8B4B-53FB54484234}"
      DTS:From="Package\DIMENSION AND FACT DATA LOAD"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\ETL END" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{198200E3-32AF-4114-A0D6-147C568EA954}"
      DTS:From="Package\DIMENSION AND FACT DATA LOAD"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\SEND FAILURE MESSAGE VIA EMAIL INCLUDING LOGS"
      DTS:Value="1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{6B3DE5EF-D3F6-4A03-945B-085E22D2403B}"
      DTS:From="Package\ETL END"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\SEND FAILURE MESSAGE VIA EMAIL INCLUDING LOGS"
      DTS:Value="1" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{C828C18C-9119-43BD-BA0B-2FCFD73F7D8D}"
      DTS:EventID="2"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{4C2EE0A5-4F5A-4BDE-96EB-04A94CBADC4B}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="205,55"
          Size="205,98"
          Id="Package\DIMENSION AND FACT DATA LOAD\CUBE PROCESSING"
          TopLeft="13.7142857142857,184" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="219,55"
          Size="219,98"
          Id="Package\DIMENSION AND FACT DATA LOAD\DIMENSION DATA LOAD"
          TopLeft="14,30" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="205,55"
          Size="205,98"
          Id="Package\DIMENSION AND FACT DATA LOAD\FACT DATA LOAD"
          TopLeft="338.571428571428,32" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="205,55"
          Size="205,98"
          Id="Package\DIMENSION AND FACT DATA LOAD\GENERATE FILE"
          TopLeft="306.571428571428,184.857142857143" />
        <EdgeLayout
          Id="Package\DIMENSION AND FACT DATA LOAD.PrecedenceConstraints[Constraint]"
          TopLeft="233,80">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="105.571428571428,0"
              Start="0,0"
              End="98.0714285714284,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="98.0714285714284,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DIMENSION AND FACT DATA LOAD.PrecedenceConstraints[Constraint 1]"
          TopLeft="441.071428571428,130">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-324.857142857142,54"
              Start="0,0"
              End="-324.857142857142,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23"
                    Point2="0,27"
                    Point3="-4,27" />
                  <mssgle:LineSegment
                    End="-320.857142857142,27" />
                  <mssgle:CubicBezierSegment
                    Point1="-320.857142857142,27"
                    Point2="-324.857142857142,27"
                    Point3="-324.857142857142,31" />
                  <mssgle:LineSegment
                    End="-324.857142857142,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DIMENSION AND FACT DATA LOAD.PrecedenceConstraints[Constraint 2]"
          TopLeft="218.714285714286,233.428571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="87.8571428571428,0"
              Start="0,0"
              End="80.3571428571428,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="80.3571428571428,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="574,495"
          Size="574,538"
          Id="Package\DIMENSION AND FACT DATA LOAD"
          TopLeft="1417.5,784.78571428571" />
        <NodeLayout
          Size="137,42"
          Id="Package\ETL END\Send log file"
          TopLeft="59.6666666666667,25.9047619047618" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="283,123"
          Size="283,166"
          Id="Package\ETL END"
          TopLeft="1661.57142857144,115.214285714287" />
        <NodeLayout
          Size="162,42"
          Id="Package\ETL START\Check Connections\Verify Connection"
          TopLeft="11,12" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="190,74"
          Size="190,117"
          Id="Package\ETL START\Check Connections"
          TopLeft="188,19.5" />
        <NodeLayout
          Size="130,42"
          Id="Package\ETL START\Check File Directory\Checking Directory"
          TopLeft="11,16" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="153,70"
          Size="153,113"
          Id="Package\ETL START\Check File Directory"
          TopLeft="12.1428571428572,23" />
        <EdgeLayout
          Id="Package\ETL START.PrecedenceConstraints[Constraint]"
          TopLeft="165.142857142857,78.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="22.8571428571428,0"
              Start="0,0"
              End="15.3571428571428,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="15.3571428571428,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="390,150"
          Size="390,193"
          Id="Package\ETL START"
          TopLeft="98,92.595238095238" />
        <NodeLayout
          Size="182,88"
          Id="Package\SEND FAILURE MESSAGE VIA EMAIL INCLUDING LOGS"
          TopLeft="974.142857142857,147.047619047619" />
        <NodeLayout
          Size="189,42"
          Id="Package\STAGING DATA LOAD\Staging Data Load END"
          TopLeft="248.857142857143,357.571428571429" />
        <NodeLayout
          Size="200,42"
          Id="Package\STAGING DATA LOAD\Staging Data Load START"
          TopLeft="241.428571428571,24.7142857142857" />
        <NodeLayout
          Size="122,42"
          Id="Package\STAGING DATA LOAD\TESTING"
          TopLeft="282.142857142857,109.142857142857" />
        <EdgeLayout
          Id="Package\STAGING DATA LOAD.PrecedenceConstraints[Constraint]"
          TopLeft="342.285714285714,66.7142857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42.4285714285714"
              Start="0,0"
              End="0,34.9285714285714">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.9285714285714" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\STAGING DATA LOAD.PrecedenceConstraints[Constraint 1]"
          TopLeft="343.25,151.142857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,206.428571428572"
              Start="0,0"
              End="0,198.928571428572">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,198.928571428572" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="651,453"
          Size="651,496"
          Id="Package\STAGING DATA LOAD"
          TopLeft="78.5476190476197,423.16666666667" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="488,190.071428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="486.142857142857,0"
              Start="0,0"
              End="478.642857142857,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="478.642857142857,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="224.080080915178,5,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="294.940476190476,285.595238095238">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,137.571428571432"
              Start="0,0"
              End="0,130.071428571432">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,130.071428571432" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="511.214285714286,423.16666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="524.928571428571,-188.119047619051"
              Start="0,0"
              End="524.928571428571,-180.619047619051">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-89.3251975341541" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-89.3251975341541"
                    Point2="0,-93.3251975341541"
                    Point3="4,-93.3251975341541" />
                  <mssgle:LineSegment
                    End="520.928571428571,-93.3251975341541" />
                  <mssgle:CubicBezierSegment
                    Point1="520.928571428571,-93.3251975341541"
                    Point2="524.928571428571,-93.3251975341541"
                    Point3="524.928571428571,-97.3251975341541" />
                  <mssgle:LineSegment
                    End="524.928571428571,-180.619047619051" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="247.222938058035,-88.3251975341541,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="729.54761904762,671.16666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="687.95238095238,382.61904761904"
              Start="0,0"
              End="680.45238095238,382.61904761904">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="339.97619047619,0" />
                  <mssgle:CubicBezierSegment
                    Point1="339.97619047619,0"
                    Point2="343.97619047619,0"
                    Point3="343.97619047619,4" />
                  <mssgle:LineSegment
                    End="343.97619047619,378.61904761904" />
                  <mssgle:CubicBezierSegment
                    Point1="343.97619047619,378.61904761904"
                    Point2="343.97619047619,382.61904761904"
                    Point3="347.97619047619,382.61904761904" />
                  <mssgle:LineSegment
                    End="680.45238095238,382.61904761904" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="1800.95238095239,784.78571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-503.571428571423"
              Start="0,0"
              End="0,-496.071428571423">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-496.071428571423" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="1610.16666666667,784.78571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-516.02380952381,-549.738095238091"
              Start="0,0"
              End="-516.02380952381,-542.238095238091">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-268.835670252247" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-268.835670252247"
                    Point2="0,-272.835670252247"
                    Point3="-4,-272.835670252247" />
                  <mssgle:LineSegment
                    End="-512.02380952381,-272.835670252247" />
                  <mssgle:CubicBezierSegment
                    Point1="-512.02380952381,-272.835670252247"
                    Point2="-516.02380952381,-272.835670252247"
                    Point3="-516.02380952381,-276.835670252247" />
                  <mssgle:LineSegment
                    End="-516.02380952381,-542.238095238091" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-273.253252418155,-267.835670252247,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="1661.57142857144,194.630952380953">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-505.428571428583,0"
              Start="0,0"
              End="-497.928571428583,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-497.928571428583,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-264.205633370542,5,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="286,42"
          Id="{8febbee5-86f4-43a2-9178-6f45137a3d08}"
          TopLeft="34,49" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="351,157"
          Size="351,200"
          Id="{FC1F0440-1062-41A0-8036-3EF5460D67FF}"
          TopLeft="301,103" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\STAGING DATA LOAD\TESTING">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="150,42"
          Id="81"
          TopLeft="83,95" />
        <NodeLayout
          Size="171,42"
          Id="2"
          TopLeft="410,151" />
        <EdgeLayout
          Id="189"
          TopLeft="233,116">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="177,56"
              Start="0,0"
              End="169.5,56">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="84.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="84.5,0"
                    Point2="88.5,0"
                    Point3="88.5,4" />
                  <mssgle:LineSegment
                    End="88.5,52" />
                  <mssgle:CubicBezierSegment
                    Point1="88.5,52"
                    Point2="88.5,56"
                    Point3="92.5,56" />
                  <mssgle:LineSegment
                    End="169.5,56" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>